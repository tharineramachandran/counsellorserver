{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_RegistrationModal.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Checkbox, Divider, List, Label } from 'semantic-ui-react';\nimport Counsellor_Registration from './_Counsellor_Registration';\nimport ChangePassword from \"./UserDashboard/layout/ChangePasswordModel\";\nimport { Authorize } from \"../../MainComponents/DesktopComponent\";\nimport axios from '../../Store/_AxiosInstance';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport googleLogin from \"google-auth-library\";\n\nvar _RegistrationModal = function _RegistrationModal(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(window.innerWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defHeight = _useState4[0],\n      setHeight = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ModalLogin = _useState6[0],\n      setModalLogin = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ModalConsellorTypeSingup = _useState8[0],\n      setModalConsellorTypeSingup = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      openPassword = _useState10[0],\n      setPasswordOpen = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ModalStudentSignUp = _useState12[0],\n      setModalStudentSignUp = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ModalPassword = _useState14[0],\n      setModalPassword = _useState14[1];\n\n  var _useState15 = useState({\n    TX_USER_NAME: \"\",\n    TX_USER_EMAIL: \"\",\n    TX_USER_PASSWORD: \"\" // USER_CONFIRM_PASSWORD:\"\"\n\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      inputs = _useState16[0],\n      setInputs = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      errorLoginMessage = _useState18[0],\n      setErrorLoginMessage = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      errorSignUpMessage = _useState20[0],\n      setErrorSignUpMessage = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      rememberMe = _useState22[0],\n      setRememberMe = _useState22[1];\n\n  var TX_USER_NAME = inputs.TX_USER_NAME,\n      TX_USER_EMAIL = inputs.TX_USER_EMAIL,\n      TX_USER_PASSWORD = inputs.TX_USER_PASSWORD;\n  var setAuth = useContext(Authorize);\n  useEffect(function () {\n    if (localStorage.checkbox && localStorage.username !== \"\") {\n      setRememberMe(localStorage.checkbox);\n      setInputs({\n        TX_USER_EMAIL: localStorage.username,\n        TX_USER_PASSWORD: localStorage.password\n      });\n    }\n  }, []);\n\n  var onChangeOfForm = function onChangeOfForm(e) {\n    setErrorLoginMessage('');\n    setErrorSignUpMessage('');\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitStudentSignUpForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, response, parseRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              body = {\n                TX_USER_NAME: TX_USER_NAME,\n                TX_USER_EMAIL: TX_USER_EMAIL,\n                TX_USER_PASSWORD: TX_USER_PASSWORD\n              };\n              console.log(body);\n              _context.next = 6;\n              return fetch(baseURLAPI + \"/auth/register\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              parseRes = _context.sent;\n              console.log(\"registration data\", parseRes);\n\n              if (!parseRes.jwtToken) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 14;\n              return localStorage.setItem(\"jwtToken\", parseRes.jwtToken);\n\n            case 14:\n              _context.next = 16;\n              return localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor);\n\n            case 16:\n              _context.next = 18;\n              return localStorage.setItem(\"userID\", parseRes.userID);\n\n            case 18:\n              setAuth(true);\n              toast.success('login successful!', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: ''\n              });\n              _context.next = 24;\n              break;\n\n            case 22:\n              setErrorSignUpMessage(parseRes);\n              setAuth(false);\n\n            case 24:\n              _context.next = 29;\n              break;\n\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.message);\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 26]]);\n    }));\n\n    return function onSubmitStudentSignUpForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitLoginForm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var body, response, parseRes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.prev = 1;\n\n              if (rememberMe) {\n                localStorage.username = TX_USER_EMAIL;\n                localStorage.password = TX_USER_PASSWORD;\n                localStorage.checkbox = rememberMe;\n              } else {\n                localStorage.username = \"\";\n                localStorage.password = \"\";\n                localStorage.checkbox = false;\n              }\n\n              body = {\n                TX_USER_EMAIL: TX_USER_EMAIL,\n                TX_USER_PASSWORD: TX_USER_PASSWORD\n              };\n              _context2.next = 6;\n              return fetch(\"http://localhost:5000/auth/login\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n\n            case 9:\n              parseRes = _context2.sent;\n\n              if (parseRes.jwtToken) {\n                localStorage.setItem(\"jwtToken\", parseRes.jwtToken);\n                localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor);\n                localStorage.setItem(\"userID\", parseRes.userID);\n                setAuth(true);\n                toast.success('login successfull!', {\n                  position: \"top-right\",\n                  autoClose: 3000,\n                  hideProgressBar: true,\n                  closeOnClick: true,\n                  pauseOnHover: false,\n                  draggable: true,\n                  progress: ''\n                }); // toast.success(\"login successfully!\")\n              } else {\n                setErrorLoginMessage(parseRes);\n                setAuth(false);\n              }\n\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0.message);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n\n    return function onSubmitLoginForm(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var setHeightofScreen = function setHeightofScreen() {\n      return setHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', setHeightofScreen);\n    return function () {\n      window.removeEventListener('resize', setHeightofScreen);\n    };\n  });\n\n  var StudentSignUp = function StudentSignUp() {\n    setModalLogin(false);\n    setModalStudentSignUp(true);\n  };\n\n  var CounsellorSignUp = function CounsellorSignUp() {\n    setModalLogin(false);\n    setModalConsellorTypeSingup(true);\n  };\n\n  var PasswordSignUp = function PasswordSignUp() {\n    setModalLogin(false);\n    setModalConsellorTypeSingup(false);\n    setModalPassword(true);\n  };\n\n  var close = function close() {\n    setOpen(false);\n    props.onCloseModal();\n  };\n\n  var _handleGoogleSignInClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              window.open(\"http://localhost:5000/socialauth/google/0\", \"_self\");\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function _handleGoogleSignInClick() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.log(rememberMe);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, ModalLogin && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    size: 'small',\n    closeOnEscape: false,\n    closeOnDimmerClick: false,\n    dimmer: \"blurring\",\n    open: open,\n    onClose: function onClose() {\n      return close();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    color: \"black\",\n    textAlign: \"center\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"Log-in\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"SingPass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"SingPass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 53\n    }\n  }), \" Log In with SingPass\"), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    color: \"facebook\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"facebook\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 53\n    }\n  }), \" Log In with Facebook\")), /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    onClick: _handleGoogleSignInClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"google\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 53\n    }\n  }), \" Log In with Google \\xA0\\xA0\"), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    color: \"linkedin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"linkedin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 53\n    }\n  }), \" Log In with LinkedIn \\xA0\\xA0\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: onSubmitLoginForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your Email Id\",\n    type: \"text\",\n    name: \"TX_USER_EMAIL\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_EMAIL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter password\",\n    type: \"password\",\n    name: \"TX_USER_PASSWORD\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_PASSWORD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 49\n    }\n  }, \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"rememberMe\",\n    checked: rememberMe,\n    onChange: function onChange() {\n      return setRememberMe(!rememberMe);\n    },\n    label: \"Remember me\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 49\n    }\n  }, \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 53\n    }\n  }, \"Forgot password?\"))), errorLoginMessage && /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    style: {\n      padding: '0.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 57\n    }\n  }, errorLoginMessage))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, \"New to us? \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: StudentSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 45\n    }\n  }, \"Sign Up as a Student\"), \"\\xA0\\xA0\"), \" |\", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: CounsellorSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 86\n    }\n  }, \"Sign Up as a Counsellor\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: PasswordSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 41\n    }\n  }, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 84\n    }\n  }, \"Forgot Password\")))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 31\n    }\n  }))), ModalConsellorTypeSingup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    size: \"large\",\n    centered: false,\n    open: open,\n    onClose: function onClose() {\n      return close();\n    },\n    closeOnEscape: false,\n    closeOnDimmerClick: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: '100%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Counsellor_Registration, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 37\n    }\n  })))))), ModalPassword && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    size: \"large\",\n    centered: false,\n    open: open,\n    onClose: function onClose() {\n      return close();\n    },\n    closeOnEscape: false,\n    closeOnDimmerClick: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: '100%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChangePassword, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  })))))), ModalStudentSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    closeIcon: true,\n    size: 'small',\n    closeOnEscape: false,\n    closeOnDimmerClick: false,\n    dimmer: \"blurring\",\n    open: open,\n    onClose: function onClose() {\n      return close();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    color: \"black\",\n    textAlign: \"center\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 37\n    }\n  }, \"Sign up for Students\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 37\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: onSubmitStudentSignUpForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your Name\",\n    type: \"text\",\n    name: \"TX_USER_NAME\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_NAME,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your Email Id\",\n    type: \"text\",\n    name: \"TX_USER_EMAIL\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_EMAIL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter password\",\n    type: \"password\",\n    name: \"TX_USER_PASSWORD\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_PASSWORD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 57\n    }\n  }))), errorSignUpMessage && /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    style: {\n      padding: '0.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 57\n    }\n  }, errorSignUpMessage))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 45\n    }\n  }, \"Sign up\")))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default _RegistrationModal;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/_RegistrationModal.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Checkbox","Divider","List","Label","Counsellor_Registration","ChangePassword","Authorize","axios","ToastContainer","toast","googleLogin","_RegistrationModal","props","open","setOpen","window","innerWidth","defHeight","setHeight","ModalLogin","setModalLogin","ModalConsellorTypeSingup","setModalConsellorTypeSingup","openPassword","setPasswordOpen","ModalStudentSignUp","setModalStudentSignUp","ModalPassword","setModalPassword","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","inputs","setInputs","errorLoginMessage","setErrorLoginMessage","errorSignUpMessage","setErrorSignUpMessage","rememberMe","setRememberMe","setAuth","localStorage","checkbox","username","password","onChangeOfForm","e","target","name","value","onSubmitStudentSignUpForm","preventDefault","body","console","log","fetch","baseURLAPI","method","headers","JSON","stringify","response","json","parseRes","jwtToken","setItem","isCounsellor","userID","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","message","onSubmitLoginForm","setHeightofScreen","innerHeight","addEventListener","removeEventListener","StudentSignUp","CounsellorSignUp","PasswordSignUp","close","onCloseModal","_handleGoogleSignInClick","maxWidth","padding","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Checkbox, Divider, List, Label\r\n} from 'semantic-ui-react';\r\nimport Counsellor_Registration from './_Counsellor_Registration';\r\n\r\n\r\n\r\nimport ChangePassword from \"./UserDashboard/layout/ChangePasswordModel\"\r\nimport { Authorize } from \"../../MainComponents/DesktopComponent\";\r\nimport axios from '../../Store/_AxiosInstance';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport googleLogin from \"google-auth-library\"\r\n\r\nconst _RegistrationModal = props => {\r\n    const [open, setOpen] = useState(true);\r\n    const [defHeight, setHeight] = useState(window.innerWidth);\r\n    const [ModalLogin, setModalLogin] = useState(true);\r\n    const [ModalConsellorTypeSingup, setModalConsellorTypeSingup] = useState(false);\r\n    const [openPassword, setPasswordOpen] = useState(false)\r\n    const [ModalStudentSignUp, setModalStudentSignUp] = useState(false);\r\n    const [ ModalPassword, setModalPassword] = useState(false);\r\n     \r\n    const [inputs, setInputs] = useState({\r\n        TX_USER_NAME: \"\",\r\n        TX_USER_EMAIL: \"\",\r\n        TX_USER_PASSWORD: \"\",\r\n        // USER_CONFIRM_PASSWORD:\"\"\r\n    });\r\n    const [errorLoginMessage, setErrorLoginMessage] = useState('');\r\n    const [errorSignUpMessage, setErrorSignUpMessage] = useState('');\r\n    const [rememberMe, setRememberMe] = useState();\r\n\r\n    const { TX_USER_NAME, TX_USER_EMAIL, TX_USER_PASSWORD } = inputs;\r\n    const setAuth = useContext(Authorize);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.checkbox && localStorage.username !== \"\") {\r\n            setRememberMe(localStorage.checkbox);\r\n            setInputs({\r\n                TX_USER_EMAIL: localStorage.username,\r\n                TX_USER_PASSWORD: localStorage.password\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const onChangeOfForm = (e) => {\r\n        setErrorLoginMessage('');\r\n        setErrorSignUpMessage('');\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const onSubmitStudentSignUpForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = { TX_USER_NAME, TX_USER_EMAIL, TX_USER_PASSWORD };\r\n            console.log(body);\r\n\r\n            const response = await fetch(baseURLAPI+\"/auth/register\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const parseRes = await response.json()\r\n            console.log(\"registration data\", parseRes)\r\n\r\n            if (parseRes.jwtToken) {\r\n                await    localStorage.setItem(\"jwtToken\", parseRes.jwtToken)\r\n                await    localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor)\r\n                await  localStorage.setItem(\"userID\", parseRes.userID); \r\n\r\n                \r\n\r\n\r\n\r\n\r\n\r\n\r\n                setAuth(true);\r\n                toast.success('login successful!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: '',\r\n                });\r\n            }\r\n            else {\r\n                setErrorSignUpMessage(parseRes);\r\n              setAuth(false);\r\n            } \r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    const onSubmitLoginForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            if (rememberMe) {\r\n                localStorage.username = TX_USER_EMAIL;\r\n                localStorage.password = TX_USER_PASSWORD;\r\n                localStorage.checkbox = rememberMe;\r\n            }\r\n            else {\r\n                localStorage.username = \"\";\r\n                localStorage.password = \"\";\r\n                localStorage.checkbox = false;\r\n            }\r\n            const body = { TX_USER_EMAIL, TX_USER_PASSWORD };\r\n            const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const parseRes = await response.json()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            if (parseRes.jwtToken) {\r\n                localStorage.setItem(\"jwtToken\", parseRes.jwtToken)\r\n                localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor)\r\n                localStorage.setItem(\"userID\", parseRes.userID); \r\n                setAuth(true);\r\n                toast.success('login successfull!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: '',\r\n                });\r\n                // toast.success(\"login successfully!\")\r\n            }\r\n            else {\r\n                setErrorLoginMessage(parseRes);\r\n                 setAuth(false);\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const setHeightofScreen = () => setHeight(window.innerHeight)\r\n        window.addEventListener('resize', setHeightofScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setHeightofScreen)\r\n        }\r\n    })\r\n\r\n    const StudentSignUp = () => {\r\n        setModalLogin(false)\r\n        setModalStudentSignUp(true)\r\n    }\r\n    const CounsellorSignUp = () => {\r\n        setModalLogin(false)\r\n        setModalConsellorTypeSingup(true)\r\n    }\r\n    const PasswordSignUp = () => {\r\n        setModalLogin(false)\r\n        setModalConsellorTypeSingup(false)\r\n        setModalPassword(true)\r\n    }\r\n    const close = () => {\r\n        setOpen(false);\r\n        props.onCloseModal();\r\n    }\r\n\r\n    const _handleGoogleSignInClick = async () => {\r\n        window.open(\"http://localhost:5000/socialauth/google/0\", \"_self\");\r\n    }\r\n\r\n    console.log(rememberMe);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {ModalLogin &&\r\n                <>\r\n                    <Modal\r\n                        closeIcon\r\n                        size={'small'}\r\n                        closeOnEscape={false}\r\n                        closeOnDimmerClick={false}\r\n                        dimmer=\"blurring\"\r\n                        open={open}\r\n                        onClose={() => close()}>\r\n\r\n                        <Modal.Content>\r\n                            <Grid textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column style={{ maxWidth: 450 }}>\r\n                                    <Header as='h2' color='black' textAlign='center' style={{ padding: \"10px\" }}>\r\n                                        Log-in\r\n                            </Header>\r\n                                    <Form size='large' >\r\n                                        <List divided relaxed>\r\n                                            <List.Item>\r\n                                                <Button color='SingPass'>\r\n                                                    <Icon name='SingPass' /> Log In with SingPass\r\n                                    </Button> &nbsp;&nbsp;&nbsp;\r\n\r\n                                        <Button color='facebook'>\r\n                                                    <Icon name='facebook' /> Log In with Facebook\r\n                                    </Button>\r\n                                            </List.Item>\r\n                                            <List.Item>\r\n                                                <Button color='red' onClick={_handleGoogleSignInClick}>\r\n                                                    <Icon name='google' /> Log In with Google &nbsp;&nbsp;\r\n                                    </Button> &nbsp;&nbsp;&nbsp;\r\n                                    <Button color='linkedin'>\r\n                                                    <Icon name='linkedin' /> Log In with LinkedIn &nbsp;&nbsp;\r\n                                    </Button>\r\n                                            </List.Item>\r\n                                        </List>\r\n                                    </Form>\r\n                                    <br />\r\n                                    <Divider horizontal>Or</Divider>\r\n                                    <Form size='small' onSubmit={onSubmitLoginForm}>\r\n                                        <Segment stacked>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter your Email Id'\r\n                                                        type='text'\r\n                                                        name=\"TX_USER_EMAIL\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_EMAIL}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter password'\r\n                                                        type='password'\r\n                                                        name=\"TX_USER_PASSWORD\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_PASSWORD}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    &nbsp;&nbsp;&nbsp;\r\n                                                        <Checkbox name=\"rememberMe\" checked={rememberMe} onChange={() => setRememberMe(!rememberMe)} label='Remember me' />\r\n                                                </Form.Field>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    &nbsp;&nbsp;&nbsp;\r\n                                                    <Label as=\"a\">Forgot password?</Label>\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            {errorLoginMessage && (\r\n                                                <Form.Group widths='equal'>\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Message negative style={{ padding: '0.5rem' }}>\r\n                                                            {errorLoginMessage}\r\n                                                        </Message>\r\n                                                    </Form.Field>\r\n                                                </Form.Group>\r\n                                            )\r\n                                            }\r\n                                            <Button color='teal' fluid size='large'>\r\n                                                Login\r\n                                </Button>\r\n                                        </Segment>\r\n                                    </Form>\r\n\r\n                                    <Message>\r\n                                        New to us? <br />\r\n                                        <span onClick={StudentSignUp}>\r\n                                            <a href='#'>Sign Up as a Student</a>&nbsp;&nbsp;\r\n                                        </span > |\r\n                                        <span onClick={CounsellorSignUp}>&nbsp;&nbsp;<a href='#'>Sign Up as a Counsellor</a></span>\r\n                                        <br/>\r\n                                        <span onClick={PasswordSignUp}>&nbsp;&nbsp;<a href='#'>Forgot Password</a></span>\r\n\r\n\r\n                                        {/* <Modal\r\n      onClose={() => setPasswordOpen(false)}\r\n      onOpen={() => setPasswordOpen(true)} \r\n      open={openPassword}\r\n      trigger={      <span  >&nbsp;&nbsp;<a href='#' >Change Password </a></span>                     }\r\n    >\r\n      <Modal.Header>Change Password</Modal.Header>\r\n      <Modal.Content  >\r\n      <ChangePassword \r\n           \r\n         /> \r\n         \r\n      </Modal.Content> \r\n    </Modal> */}\r\n                                    </Message>\r\n\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Content>\r\n                        <br /><br />\r\n                    </Modal>\r\n                </>\r\n            }\r\n\r\n            {ModalConsellorTypeSingup &&\r\n                <>\r\n                    <Modal\r\n                        closeIcon\r\n                        size=\"large\"\r\n                        centered={false}\r\n                        open={open}\r\n                        onClose={() => close()}\r\n                        closeOnEscape={false}\r\n                        closeOnDimmerClick={false}\r\n                    >\r\n                        <Modal.Content scrolling>\r\n                            <Grid>\r\n                                <Grid.Column style={{ maxWidth: '100%', backgroundColor: 'white' }}>\r\n                                    <Counsellor_Registration />\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Content>\r\n                    </Modal>\r\n                </>\r\n            }\r\n {ModalPassword &&\r\n                <>\r\n                    <Modal\r\n                        closeIcon\r\n                        size=\"large\"\r\n                        centered={false}\r\n                        open={open}\r\n                        onClose={() => close()}\r\n                        closeOnEscape={false}\r\n                        closeOnDimmerClick={false}\r\n                    >\r\n                        <Modal.Content scrolling>\r\n                            <Grid>\r\n                                <Grid.Column style={{ maxWidth: '100%', backgroundColor: 'white' }}>\r\n                                    <ChangePassword/>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Content>\r\n                    </Modal>\r\n                </>\r\n            }\r\n\r\n            {ModalStudentSignUp &&\r\n                <>\r\n                    <Modal\r\n                        closeIcon\r\n                        size={'small'}\r\n                        closeOnEscape={false}\r\n                        closeOnDimmerClick={false}\r\n                        dimmer=\"blurring\"\r\n                        open={open}\r\n                        onClose={() => close()}>\r\n\r\n                        <Modal.Content>\r\n                            <Grid textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column style={{ maxWidth: 450 }}>\r\n                                    <Header as='h2' color='black' textAlign='center' style={{ padding: \"10px\" }}>\r\n                                        Sign up for Students\r\n                            </Header>\r\n                                    <br />\r\n                                    <Divider horizontal>Or</Divider>\r\n                                    <Form size='small' onSubmit={onSubmitStudentSignUpForm}>\r\n                                        <Segment stacked>\r\n                                            <Form.Group widths='equal'>\r\n\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter your Name'\r\n                                                        type='text'\r\n                                                        name=\"TX_USER_NAME\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_NAME}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter your Email Id'\r\n                                                        type='text'\r\n                                                        name=\"TX_USER_EMAIL\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_EMAIL}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter password'\r\n                                                        type='password'\r\n                                                        name=\"TX_USER_PASSWORD\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_PASSWORD}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            {errorSignUpMessage && (\r\n                                                <Form.Group widths='equal'>\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Message negative style={{ padding: '0.5rem' }}>\r\n                                                            {errorSignUpMessage}\r\n                                                        </Message>\r\n                                                    </Form.Field>\r\n                                                </Form.Group>\r\n                                            )\r\n                                            }\r\n                                            {/* <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Re-enter password'\r\n                                                        type='password'\r\n                                                        name=\"USER_CONFIRM_PASSWORD\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={USER_CONFIRM_PASSWORD}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group> */}\r\n\r\n\r\n                                            {/* <Button onClick={() => setAuth(true)} color='teal' fluid size='large'> */}\r\n                                            <Button color='teal' fluid size='large'>\r\n                                                Sign up\r\n                                            </Button>\r\n                                        </Segment>\r\n                                    </Form>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Modal.Content>\r\n                        <br /><br />\r\n                    </Modal>\r\n                </>\r\n            }\r\n\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default _RegistrationModal;"]},"metadata":{},"sourceType":"module"}