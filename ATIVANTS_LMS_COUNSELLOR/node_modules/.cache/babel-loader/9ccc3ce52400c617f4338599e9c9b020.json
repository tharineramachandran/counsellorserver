{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\UserDashboard\\\\layout\\\\ViewUserRequest.js\";\nimport React from 'react';\nimport { Button, Form, Header, Image, Input, Dropdown, Grid, Modal, Placeholder, Message, Segment, Card, Img, Icon, Table, Label, Container, List, Popup } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport ChangeSession from \"./UserRequestChangeSessionModel\";\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // import FullCalendar from '@fullcalendar/react'\n// import interactionPlugin from '@fullcalendar/interaction'\n// import timeGridPlugin from ' ullcalendar/timegrid'\n\nvar axios = require('axios');\n\nvar ViewRequest = /*#__PURE__*/function (_React$Component) {\n  _inherits(ViewRequest, _React$Component);\n\n  var _super = _createSuper(ViewRequest);\n\n  function ViewRequest() {\n    var _this;\n\n    _classCallCheck(this, ViewRequest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      requests: [],\n      openModel: false,\n      element: {}\n    };\n\n    _this.setTable = function () {\n      axios.get('http://localhost:5000/request/user/getRequests/' + localStorage.userID, {\n        headers: {\n          jwtToken: localStorage.jwtToken\n        },\n        data: {\n          userID: localStorage.userID\n        }\n      }).then(function (res) {\n        var requests = res.data;\n\n        var display = _this.dateTimeFormat(requests, \"#db2828\", \"Unconfirmed sessions\");\n\n        var openModel = false;\n\n        _this.setState({\n          requests: display,\n          openModel: openModel\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:5000/session/user/accepted/' + localStorage.userID, {\n        headers: {\n          jwtToken: localStorage.jwtToken\n        },\n        data: {\n          userID: localStorage.userID\n        }\n      }).then(function (res) {\n        var requests = res.data;\n\n        var display = _this.dateTimeFormat(requests, \"#21ba45\", \"Confirmed sessions\");\n\n        var final = _this.state.requests.concat(display);\n\n        var openModel = false;\n\n        _this.setState({\n          requests: final,\n          openModel: openModel\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.dateTimeFormat = function (requests, backgroundColor, title) {\n      var display = [];\n      requests.forEach(function (element) {\n        var strsa = element.ct_session_start_time;\n        var st = strsa.split('T');\n        var stDF = st[1].split(':');\n        var str = st[0] + \"T\" + stDF[0] + \":\" + stDF[1] + \":00\";\n        var startdate = new Date(str);\n        var endstrsa = element.ct_session_end_time;\n        var endst = endstrsa.split('T');\n        var endstDF = endst[1].split(':');\n        var endstr = endst[0] + \"T\" + endstDF[0] + \":\" + endstDF[1] + \":00\";\n        var enddate = new Date(endstr);\n        var datestr = element.ct_session_start_time.split(\"T\");\n        var datestrdate = datestr[0].split(\"-\");\n        var datestr3 = datestr[1].split(\":\");\n        var enddatestr = element.ct_session_end_time.split(\"T\");\n        var enddatestr3 = enddatestr[1].split(\":\");\n        var day = parseInt(datestrdate[2]).toString();\n        element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\n        element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\n        element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\n        var obj = {\n          title: title,\n          start: str,\n          end: endstr,\n          color: backgroundColor,\n          extendedProps: {\n            element: element\n          }\n        };\n        display.push(obj);\n      });\n      return display;\n    };\n\n    _this.handleEventClick = function (_ref) {\n      var event = _ref.event;\n      // openAppointment is a function I wrote to open a form to edit that appointment\n      console.log(event);\n\n      _this.setState({\n        openModel: true,\n        element: event._def.extendedProps.element\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewRequest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        columns: \"equal\",\n        divided: true,\n        style: {\n          padding: '3%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }\n      }, \"      \", /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }\n      }, \"Legend\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }\n      }, \"   \", /*#__PURE__*/React.createElement(Label, {\n        color: \"green\",\n        circular: true,\n        empty: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 12\n        }\n      }), \"  Confirmed Sessions\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Label, {\n        color: \"red\",\n        circular: true,\n        empty: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 10\n        }\n      }), \" Unconfirmed Sessions\")))), \"     \"), /*#__PURE__*/React.createElement(Grid.Row, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FullCalendar, {\n        nowIndicator: true,\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        initialView: \"dayGridMonth\",\n        events: this.state.requests,\n        eventClick: this.handleEventClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        onClose: function onClose() {\n          return _this2.setState({\n            openModel: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this2.setState({\n            openModel: true\n          });\n        },\n        open: this.state.openModel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 57\n        }\n      }, \"Session Details \"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 50\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 54\n        }\n      }, \"Counsellor Username  :\"), \" \", this.state.element.TX_USER_NAME, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 50\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 54\n        }\n      }, \" Counsellor  Email :\"), \" \", this.state.element.TX_USER_EMAIL, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 50\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 54\n        }\n      }, \" Session Date  : \"), \" \", this.state.element.ct_session_date, \"  \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 50\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 54\n        }\n      }, \"    Session Start Time  :\"), \"  \", this.state.element.ct_session_start_time, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 53\n        }\n      }, \"   Session End Time  : \"), \" \", this.state.element.ct_session_end_time, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 49\n        }\n      }), this.state.element.ct_meeting_url ? /*#__PURE__*/React.createElement(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          return window.open(_this2.state.element.ct_meeting_url);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 54\n        }\n      }, \" Google Meet Link\") : /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 49\n        }\n      }, \" This session has not be confirmed by the counsellor\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: function onClick() {\n          return _this2.setState({\n            openModel: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 61\n        }\n      }, \"Close\"))))));\n    }\n  }]);\n\n  return ViewRequest;\n}(React.Component);\n\nexport default ViewRequest;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/UserDashboard/layout/ViewUserRequest.js"],"names":["React","Button","Form","Header","Image","Input","Dropdown","Grid","Modal","Placeholder","Message","Segment","Card","Img","Icon","Table","Label","Container","List","Popup","ToastContainer","toast","ChangeSession","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","axios","require","ViewRequest","state","requests","openModel","element","setTable","get","localStorage","userID","headers","jwtToken","data","then","res","display","dateTimeFormat","setState","catch","error","console","log","final","concat","backgroundColor","title","forEach","strsa","ct_session_start_time","st","split","stDF","str","startdate","Date","endstrsa","ct_session_end_time","endst","endstDF","endstr","enddate","datestr","datestrdate","datestr3","enddatestr","enddatestr3","day","parseInt","toString","ct_session_date","obj","start","end","color","extendedProps","push","handleEventClick","event","_def","padding","left","center","right","TX_USER_NAME","TX_USER_EMAIL","ct_meeting_url","window","open","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Form, Header, Image, Input,\r\n    Dropdown, Grid, Modal,Placeholder,\r\n    Message, Segment, Card, Img, Icon,\r\n    Table, Label, Container, List, Popup\r\n} from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ChangeSession from \"./UserRequestChangeSessionModel\"\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n// import FullCalendar from '@fullcalendar/react'\r\n// import interactionPlugin from '@fullcalendar/interaction'\r\n// import timeGridPlugin from ' ullcalendar/timegrid'\r\n \r\nconst axios = require('axios'); \r\n\r\n\r\nclass ViewRequest extends React.Component {\r\n    state = {\r\n        requests: [],\r\n        openModel: false,\r\n        element : {}\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.setTable();\r\n    }\r\n    setTable = ( ) => {\r\n        axios.get('http://localhost:5000/request/user/getRequests/'+localStorage.userID , {\r\n            headers: {\r\n                jwtToken: localStorage.jwtToken\r\n            },\r\n            data: {\r\n                userID: localStorage.userID\r\n\r\n            }\r\n        })\r\n            .then((res) => {\r\n                const requests = res.data;\r\n                var display =  this.dateTimeFormat(requests, \"#db2828\",\"Unconfirmed sessions\");\r\n              \r\n              \r\n                const openModel = false;\r\n                this.setState({ requests : display, openModel :openModel });\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\naxios.get('http://localhost:5000/session/user/accepted/'+localStorage.userID, {\r\n            headers: {\r\n                jwtToken: localStorage.jwtToken\r\n            },\r\n            data: {\r\n                userID: localStorage.userID\r\n\r\n            }\r\n        })\r\n            .then((res) => {\r\n                const requests = res.data;\r\n                var display =  this.dateTimeFormat(requests, \"#21ba45\",\"Confirmed sessions\");\r\n              var final = this.state.requests.concat(display);\r\n              \r\n                const openModel = false;\r\n                this.setState({ requests : final, openModel :openModel });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n \r\n    dateTimeFormat= ( requests,backgroundColor,title ) => {\r\n\r\n        var display = [];\r\n\r\n        requests.forEach(element => {\r\n\r\n            let strsa = element.ct_session_start_time;\r\n            var st = strsa.split('T');\r\n            var stDF = st[1].split(':');\r\n            let str = st[0]+\"T\"  +stDF[0]     +\":\"  +stDF[1]      +\":00\"               ;                 \r\n            let startdate = new Date(str  );                      \r\n            let endstrsa = element.ct_session_end_time;\r\n            var endst = endstrsa.split('T');\r\n            var endstDF = endst[1].split(':');\r\n            let endstr = endst[0]+\"T\" +endstDF[0] +\":\" +endstDF[1] +\":00\" ;\r\n         \r\n            let enddate = new Date(endstr  ); \r\n            var datestr = element.ct_session_start_time.split(\"T\");\r\n            var datestrdate = datestr[0].split(\"-\");\r\n            var datestr3 = datestr[1].split(\":\");\r\n            var enddatestr = element.ct_session_end_time.split(\"T\");\r\n            var enddatestr3 = enddatestr[1].split(\":\");\r\n\r\n            var day = (parseInt(datestrdate[2])).toString();\r\n\r\n            element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\r\n            element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\r\n            element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\r\n\r\n            var obj = {title: title, start :  str ,end :endstr ,          \r\n            color: backgroundColor,    \r\n            extendedProps: {  element: element     }};                     \r\n            display.push(obj);\r\n        });\r\n\r\n        return display\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleEventClick= ({event}) => {\r\n        // openAppointment is a function I wrote to open a form to edit that appointment\r\n        console.log(event);\r\n         \r\n\r\n\r\n        this.setState({ openModel: true , element : event._def.extendedProps.element })\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid columns='equal' divided style={{padding :'3%'}}>\r\n                 <Grid.Row>      <Grid.Column>          \r\n            <div> \r\n                    \r\n  <Message>\r\n    <Message.Header>Legend</Message.Header>     \r\n     \r\n     <p>   <Label   color= 'green' circular empty ></Label>  Confirmed Sessions</p>  \r\n     <p> <Label   color='red'circular empty ></Label> Unconfirmed Sessions</p>\r\n       \r\n  </Message>\r\n                     </div>\r\n                     </Grid.Column>     </Grid.Row>\r\n\r\n                <Grid.Row textAlign='center'>\r\n\r\n                    \r\n                    <Grid.Column>\r\n                   \r\n                    <FullCalendar\r\n     \r\n    nowIndicator={true}\r\n    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n    headerToolbar={{\r\n      left: 'prev,next today',\r\n      center: 'title',\r\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n    }}\r\n    initialView='dayGridMonth'\r\n    events={ this.state.requests}\r\n    eventClick={this.handleEventClick}\r\n\r\n  />\r\n\r\n\r\n\r\n<Modal\r\n                                                        onClose={() => this.setState({ openModel: false })}\r\n                                                        onOpen={() => this.setState({ openModel: true })}\r\n                                                        open={this.state.openModel}\r\n                                                      \r\n                                                    >\r\n                                                        <Modal.Header>Session Details </Modal.Header>\r\n                                                        <Modal.Content  >\r\n\r\n                                                 <p> <strong>Counsellor Username  :</strong> {this.state.element.TX_USER_NAME} </p> \r\n                                                 <p> <strong> Counsellor  Email :</strong> {this.state.element.TX_USER_EMAIL} </p>     \r\n                                                 <p> <strong> Session Date  : </strong> {this.state.element.ct_session_date}  </p>     \r\n                                                 <p> <strong>    Session Start Time  :</strong>  {this.state.element.ct_session_start_time} </p>  \r\n                                                <p> <strong>   Session End Time  : </strong> {this.state.element.ct_session_end_time} </p>   \r\n                                                <br/>\r\n\r\n                                                  \r\n                                               {this.state.element.ct_meeting_url ? ( \r\n                                                     <Button color='teal'\r\n                                                     onClick={() => window.open(this.state.element.ct_meeting_url)}\r\n                                                     > Google Meet Link\r\n                                                     </Button> \r\n\r\n                                                )\r\n                                                :( \r\n                                                <strong style ={{color:\"red\"}}> This session has not be confirmed by the counsellor</strong>\r\n                                                    )\r\n                                               }                                              \r\n\r\n                                                        </Modal.Content>\r\n                                                        <Modal.Actions>\r\n                                                            <Button color='black' onClick={() => this.setState({ openModel: false })}>\r\n                                                                Close\r\n                                                                </Button>\r\n                                                        </Modal.Actions>\r\n                                                    </Modal>\r\n\r\n                                                    \r\n\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewRequest;"]},"metadata":{},"sourceType":"module"}