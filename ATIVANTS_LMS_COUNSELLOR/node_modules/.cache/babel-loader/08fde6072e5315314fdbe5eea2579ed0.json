{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\n\nvar _core = require(\"@emotion/core\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _clockHand = require(\"./styles/clock-hand\");\n\nvar _math = require(\"../helpers/math\");\n\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\n\nfunction getAngle(mode, time) {\n  var increments = _constants.CLOCK_VALUES[mode].increments;\n  var value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\n\nfunction ClockHand(_ref) {\n  var mode = _ref.mode,\n      time = _ref.time;\n  var prevState = (0, _react.useRef)({\n    time: time,\n    mode: mode\n  });\n  var dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  var inner = time.hour > 0 && time.hour <= 12;\n  var handLength = (0, _constants.getClockHandLength)(mode, inner);\n  var circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  var circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner); // @ts-ignore\n\n  var _useSpring = (0, _reactSpring.useSpring)(function () {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  }),\n      _useSpring2 = (0, _slicedToArray2.default)(_useSpring, 2),\n      anim = _useSpring2[0],\n      setAnim = _useSpring2[1];\n\n  var rotation = anim.rotation,\n      length = anim.length,\n      position = anim.position;\n  (0, _react.useEffect)(function () {\n    var current = rotation.value;\n    var next = getAngle(mode, time);\n\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      var finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      setAnim({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\r\n      TODO - consider making this a config option?\r\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\r\n      change in time, just wait for mode to change\r\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      setAnim({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, setAnim, time]); // mini circle on clockhand between increments on minutes\n\n  var value = (0, _utils.getTimeValue)(mode, time);\n  var showIntermediateValueDisplay;\n\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _core.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n\n  return (0, _core.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\"\n  }, (0, _core.jsx)(_reactSpring.animated.g, {\n    transform: rotation.interpolate(function (a) {\n      return rotate(a);\n    })\n  }, (0, _core.jsx)(_reactSpring.animated.line, {\n    className: \"react-timekeeper__clock-hand\",\n    css: _clockHand.line,\n    x1: _constants.CLOCK_RADIUS,\n    y1: _constants.CLOCK_RADIUS,\n    x2: _constants.CLOCK_RADIUS,\n    y2: length,\n    strokeWidth: \"1\"\n  }), (0, _core.jsx)(\"circle\", {\n    className: \"react-timekeeper__hand-circle-center\",\n    css: _clockHand.centerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: _constants.CLOCK_RADIUS,\n    r: 1.5\n  }), (0, _core.jsx)(_reactSpring.animated.circle, {\n    className: \"react-timekeeper__hand-circle-outer\",\n    css: _clockHand.outerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: position,\n    r: circleRadius\n  }), showIntermediateValueDisplay));\n}","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/node_modules/react-timekeeper/lib/components/ClockHand.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","ClockHand","_core","_slicedToArray2","_react","_reactSpring","_utils","_constants","_clockHand","_math","rotate","r","concat","CLOCK_RADIUS","getAngle","mode","time","increments","CLOCK_VALUES","getTimeValue","prevState","useRef","dragCount","inner","hour","handLength","getClockHandLength","circlePosition","getClockHandCirclePosition","circleRadius","getClockHandCircleRadius","_useSpring","useSpring","immediate","rotation","length","position","_useSpring2","anim","setAnim","useEffect","current","next","finalAngle","calcAnimationAngle","isSameTime","showIntermediateValueDisplay","MODE","MINUTES","jsx","className","css","intermediateMinuteCircle","cx","cy","NUMBER_OUTER_POSITION","width","CLOCK_SIZE","height","viewBox","xmlns","animated","g","transform","interpolate","a","line","x1","y1","x2","y2","strokeWidth","centerCircle","circle","outerCircle"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = ClockHand;\r\n\r\nvar _core = require(\"@emotion/core\");\r\n\r\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\r\n\r\nvar _react = _interopRequireWildcard(require(\"react\"));\r\n\r\nvar _reactSpring = require(\"react-spring\");\r\n\r\nvar _utils = require(\"../helpers/utils\");\r\n\r\nvar _constants = require(\"../helpers/constants\");\r\n\r\nvar _clockHand = require(\"./styles/clock-hand\");\r\n\r\nvar _math = require(\"../helpers/math\");\r\n\r\nfunction rotate(r) {\r\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\r\n}\r\n\r\nfunction getAngle(mode, time) {\r\n  const increments = _constants.CLOCK_VALUES[mode].increments;\r\n  const value = (0, _utils.getTimeValue)(mode, time);\r\n  return value * (360 / increments);\r\n}\r\n\r\nfunction ClockHand({\r\n  mode,\r\n  time\r\n}) {\r\n  const prevState = (0, _react.useRef)({\r\n    time,\r\n    mode\r\n  });\r\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\r\n\r\n  const inner = time.hour > 0 && time.hour <= 12;\r\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\r\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\r\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner); // @ts-ignore\r\n\r\n  const _useSpring = (0, _reactSpring.useSpring)(() => {\r\n    return {\r\n      immediate: true,\r\n      rotation: getAngle(mode, time),\r\n      length: handLength,\r\n      position: circlePosition\r\n    };\r\n  }),\r\n        _useSpring2 = (0, _slicedToArray2.default)(_useSpring, 2),\r\n        anim = _useSpring2[0],\r\n        setAnim = _useSpring2[1];\r\n\r\n  const rotation = anim.rotation,\r\n        length = anim.length,\r\n        position = anim.position;\r\n  (0, _react.useEffect)(() => {\r\n    const current = rotation.value;\r\n    const next = getAngle(mode, time);\r\n\r\n    if (prevState.current.mode !== mode) {\r\n      dragCount.current = 0;\r\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\r\n\r\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\r\n      setAnim({\r\n        immediate: false,\r\n        rotation: finalAngle,\r\n        length: handLength,\r\n        position: circlePosition\r\n      });\r\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\r\n      // time changed, no animation necessary - just update clockhand\r\n      prevState.current.time = time;\r\n      dragCount.current++;\r\n      /*\r\n      TODO - consider making this a config option?\r\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\r\n      change in time, just wait for mode to change\r\n      */\r\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\r\n      // \treturn\r\n      // }\r\n\r\n      setAnim({\r\n        immediate: true,\r\n        rotation: next,\r\n        length: handLength,\r\n        position: circlePosition\r\n      });\r\n    }\r\n  }, [circlePosition, handLength, mode, rotation, setAnim, time]); // mini circle on clockhand between increments on minutes\r\n\r\n  const value = (0, _utils.getTimeValue)(mode, time);\r\n  let showIntermediateValueDisplay;\r\n\r\n  if (mode === _constants.MODE.MINUTES && value % 5) {\r\n    showIntermediateValueDisplay = (0, _core.jsx)(\"circle\", {\r\n      className: \"react-timekeeper__hand-intermediate-circle\",\r\n      css: _clockHand.intermediateMinuteCircle,\r\n      cx: _constants.CLOCK_RADIUS,\r\n      cy: _constants.NUMBER_OUTER_POSITION,\r\n      r: 4\r\n    });\r\n  }\r\n\r\n  return (0, _core.jsx)(\"svg\", {\r\n    width: _constants.CLOCK_SIZE,\r\n    height: _constants.CLOCK_SIZE,\r\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\r\n    xmlns: \"http://www.w3.org/2000/svg\",\r\n    className: \"react-timekeeper__clock-hand\"\r\n  }, (0, _core.jsx)(_reactSpring.animated.g, {\r\n    transform: rotation.interpolate(a => rotate(a))\r\n  }, (0, _core.jsx)(_reactSpring.animated.line, {\r\n    className: \"react-timekeeper__clock-hand\",\r\n    css: _clockHand.line,\r\n    x1: _constants.CLOCK_RADIUS,\r\n    y1: _constants.CLOCK_RADIUS,\r\n    x2: _constants.CLOCK_RADIUS,\r\n    y2: length,\r\n    strokeWidth: \"1\"\r\n  }), (0, _core.jsx)(\"circle\", {\r\n    className: \"react-timekeeper__hand-circle-center\",\r\n    css: _clockHand.centerCircle,\r\n    cx: _constants.CLOCK_RADIUS,\r\n    cy: _constants.CLOCK_RADIUS,\r\n    r: 1.5\r\n  }), (0, _core.jsx)(_reactSpring.animated.circle, {\r\n    className: \"react-timekeeper__hand-circle-outer\",\r\n    css: _clockHand.outerCircle,\r\n    cx: _constants.CLOCK_RADIUS,\r\n    cy: position,\r\n    r: circleRadius\r\n  }), showIntermediateValueDisplay));\r\n}"]},"metadata":{},"sourceType":"script"}