{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport _AxiosInstance from '../../../Store/_AxiosInstance';\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation,\n      step = _ref.step;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_ID = formData.COUNSELLOR_COUNSELLING_SUBJECT_ID,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_INSTITUTE = formData.COUNSELLOR_QUALIFICATION_INSTITUTE,\n      COUNSELLOR_COUNSELLING_DETAILS = formData.COUNSELLOR_COUNSELLING_DETAILS;\n  console.log(formData);\n\n  var _useState = useState('circle'),\n      _useState2 = _slicedToArray(_useState, 2),\n      icon_name = _useState2[0],\n      setIcon_name = _useState2[1];\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      WS_Countries = _useState4[0],\n      setWS_Countries = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      WS_Institutes = _useState6[0],\n      setWS_Institutes = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      WS_Qualifications = _useState8[0],\n      setWS_Qualifications = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      WS_Counselling_Subjects = _useState10[0],\n      setWS_Counselling_Subjects = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      WS_Counselling_Levels = _useState12[0],\n      setWS_Counselling_Levels = _useState12[1];\n\n  var _useState13 = useState([{\n    CT_QUALIFICATION_CODE: \"\",\n    CT_INSTITUTE_CODE: \"\",\n    CT_QUALIFICATION_NAME: \"\",\n    CT_INSTITUTE_NAME: \"\"\n  }]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      inputQualificationList = _useState14[0],\n      setInputQualificationList = _useState14[1];\n\n  var _useState15 = useState([{\n    CT_COUNSELLING_SUBJECT_CODE: \"\",\n    CT_COUNSELLING_LEVEL_CODE: \"\",\n    COUNSELLOR_HOURLY_RATE: \"\",\n    CT_COUNSELLING_SUBJECT_NAME: \"\",\n    CT_COUNSELLING_LEVEL_NAME: \"\"\n  }]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      inputCounsellingDetailsList = _useState16[0],\n      setInputCounsellingDetailsList = _useState16[1];\n\n  useEffect(function () {\n    _AxiosInstance.get('form/list').then(function (res) {\n      console.log(res.data);\n      var countries = res.data['COUNTRIES'];\n      var institutes = res.data['INSTITUTES'];\n      var qualifications = res.data['QUALIFICATIONS'];\n      var counselling_subjects = res.data['COUNSELLING_SUBJECTS'];\n      var counselling_levels = res.data['COUNSELLING_LEVELS'];\n      setWS_Countries(countries);\n      setWS_Institutes(institutes);\n      setWS_Qualifications(qualifications);\n      setWS_Counselling_Subjects(counselling_subjects);\n      setWS_Counselling_Levels(counselling_levels);\n    }).catch(function (err) {});\n\n    return function () {\n      console.log(\"cleaned up state...\");\n      setWS_Countries({});\n      setWS_Qualifications({});\n      setWS_Institutes({});\n      setWS_Counselling_Subjects({});\n      setWS_Counselling_Levels({});\n      console.log(WS_Countries);\n    };\n  }, []);\n  var countriesList = WS_Countries.length > 0 && WS_Countries.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_COUNTRY_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, item.CT_COUNTRY_NAME));\n  }, _this);\n  var qualificationsList = WS_Qualifications.length > 0 && WS_Qualifications.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_QUALIFICATION_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, item.CT_QUALIFICATION_NAME));\n  }, _this);\n  var instituteList = WS_Institutes.length > 0 && WS_Institutes.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_INSTITUTE_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, item.CT_INSTITUTE_NAME));\n  }, _this);\n  var counselling_subject_list = WS_Counselling_Subjects.length > 0 && WS_Counselling_Subjects.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_COUNSELLING_SUBJECT_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, item.CT_COUNSELLING_SUBJECT_NAME));\n  }, _this);\n  var counselling_level_list = WS_Counselling_Levels.length > 0 && WS_Counselling_Levels.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_COUNSELLING_LEVEL_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, item.CT_COUNSELLING_LEVEL_NAME));\n  }, _this);\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  useEffect(function () {\n    var e = {\n      target: {\n        name: \"COUNSELLOR_QUALIFICATION_INSTITUTE\",\n        value: inputQualificationList\n      }\n    };\n    setForm(e);\n  }, [inputQualificationList]);\n  useEffect(function () {\n    var e = {\n      target: {\n        name: \"COUNSELLOR_COUNSELLING_DETAILS\",\n        value: inputCounsellingDetailsList\n      }\n    };\n    setForm(e);\n  }, [inputCounsellingDetailsList]);\n  var Counsellor_Countries = [{\n    title: \"What kind of traveler are you?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Subject = [{\n    title: \"Choose subject?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counselling_Level = [{\n    title: \"Choose Level?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Qualification = [{\n    title: \"Choose Qualification\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Institute = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  useEffect(function () {\n    if (step.id == 'Counsellor_details') setIcon_name('circle');else setIcon_name('circle outline');\n  }, []);\n  useEffect(function () {\n    if (COUNSELLOR_QUALIFICATION_INSTITUTE.length > 0) {\n      setInputQualificationList(COUNSELLOR_QUALIFICATION_INSTITUTE);\n    }\n\n    if (COUNSELLOR_COUNSELLING_DETAILS.length > 0) {\n      setInputCounsellingDetailsList(COUNSELLOR_COUNSELLING_DETAILS);\n    }\n  }, []);\n  useEffect(function () {}, []); // handle input change\n\n  var handleInputChangeForQualification = function handleInputChangeForQualification(e, index) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    var list = _toConsumableArray(inputQualificationList);\n\n    list[index][name] = value;\n    console.log(WS_Qualifications);\n\n    if (name == \"CT_QUALIFICATION_CODE\") {\n      var CT_QUALIFICATION_NAME = WS_Qualifications.find(function (x) {\n        return x.CT_QUALIFICATION_CODE === value;\n      }).CT_QUALIFICATION_NAME;\n      list[index][\"CT_QUALIFICATION_NAME\"] = CT_QUALIFICATION_NAME;\n    }\n\n    if (name == \"CT_INSTITUTE_CODE\") {\n      var CT_INSTITUTE_NAME = WS_Institutes.find(function (x) {\n        return x.CT_INSTITUTE_CODE === value;\n      }).CT_INSTITUTE_NAME;\n      list[index][\"CT_INSTITUTE_NAME\"] = CT_INSTITUTE_NAME;\n    }\n\n    setInputQualificationList(list);\n  }; // handle click event of the Remove button\n\n\n  var handleRemoveClickForQualification = function handleRemoveClickForQualification(index) {\n    var list = _toConsumableArray(inputQualificationList);\n\n    list.splice(index, 1);\n    setInputQualificationList(list);\n  }; // handle click event of the Add button\n\n\n  var handleAddClickForQualification = function handleAddClickForQualification() {\n    setInputQualificationList([].concat(_toConsumableArray(inputQualificationList), [{\n      CT_QUALIFICATION_CODE: \"\",\n      CT_INSTITUTE_CODE: \"\",\n      CT_QUALIFICATION_NAME: \"\",\n      CT_INSTITUTE_NAME: \"\"\n    }]));\n  }; // handle input change\n\n\n  var handleInputChangeForCounselling = function handleInputChangeForCounselling(e, index) {\n    var _e$target2 = e.target,\n        name = _e$target2.name,\n        value = _e$target2.value;\n\n    var list = _toConsumableArray(inputCounsellingDetailsList);\n\n    list[index][name] = value;\n\n    if (name == \"CT_COUNSELLING_LEVEL_CODE\") {\n      var CT_COUNSELLING_LEVEL_NAME = WS_Counselling_Levels.find(function (x) {\n        return x.CT_COUNSELLING_LEVEL_CODE === value;\n      }).CT_COUNSELLING_LEVEL_NAME;\n      list[index][\"CT_COUNSELLING_LEVEL_NAME\"] = CT_COUNSELLING_LEVEL_NAME;\n    }\n\n    if (name == \"CT_COUNSELLING_SUBJECT_CODE\") {\n      var CT_COUNSELLING_SUBJECT_NAME = WS_Counselling_Subjects.find(function (x) {\n        return x.CT_COUNSELLING_SUBJECT_CODE === value;\n      }).CT_COUNSELLING_SUBJECT_NAME;\n      list[index][\"CT_COUNSELLING_SUBJECT_NAME\"] = CT_COUNSELLING_SUBJECT_NAME;\n    }\n\n    setInputCounsellingDetailsList(list);\n  }; // handle click event of the Remove button\n\n\n  var handleRemoveClickForCounselling = function handleRemoveClickForCounselling(index) {\n    var list = _toConsumableArray(inputCounsellingDetailsList);\n\n    list.splice(index, 1);\n    setInputCounsellingDetailsList(list);\n  }; // handle click event of the Add button\n\n\n  var handleAddClickForCounselling = function handleAddClickForCounselling() {\n    setInputCounsellingDetailsList([].concat(_toConsumableArray(inputCounsellingDetailsList), [{\n      CT_COUNSELLING_SUBJECT_CODE: \"\",\n      CT_COUNSELLING_LEVEL_CODE: \"\",\n      COUNSELLOR_HOURLY_RATE: \"\"\n    }]));\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    inverted: true,\n    color: \"teal\",\n    size: \"mini\",\n    style: {\n      width: '85%',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left',\n      marginLeft: '2rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 41\n    }\n  }, \"Registation for Counsellor\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right',\n      padding: '1rem;'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"hand point right outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }\n  }), \"Next\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      padding: '1rem 2rem',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: icon_name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 53\n    }\n  }), \"Personal Details\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 53\n    }\n  }), \"Photo\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 53\n    }\n  }), \"Description\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 53\n    }\n  }), \"Video\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(4);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 53\n    }\n  }), \"Availability\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(5);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 53\n    }\n  }), \"Verification\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(6);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 53\n    }\n  }), \"Summary\\xA0\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      width: '95%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 53\n    }\n  }, \"Personal Details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_FIRST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 90\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_LAST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 89\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"mail\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    iconPosition: \"left\",\n    placeholder: \"Email\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_EMAIL && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 85\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"phone\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    placeholder: \"Phone number\",\n    type: \"text\",\n    name: \"COUNSELLOR_PHONE_NUMBER\",\n    onChange: setForm,\n    value: COUNSELLOR_PHONE_NUMBER // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 57\n    }\n  }), errors.COUNSELLOR_PHONE_NUMBER && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 92\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"world\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"\",\n    name: \"COUNSELLOR_COUNTRY_CODE\",\n    value: COUNSELLOR_COUNTRY_CODE,\n    onChange: setForm,\n    placeholder: \"select your country\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 61\n    }\n  }, \"Select your country\"), countriesList)), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 53\n    }\n  }, \"Educational details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 49\n    }\n  }), inputQualificationList.map(function (x, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"graduation\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 69\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_QUALIFICATION_CODE\",\n      value: x.CT_QUALIFICATION_CODE,\n      onChange: function onChange(e) {\n        return handleInputChangeForQualification(e, i);\n      },\n      placeholder: \"select your Qualification\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 73\n      }\n    }, \"Select Your Qualification\"), qualificationsList)), /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"university\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 69\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_INSTITUTE_CODE\",\n      value: x.CT_INSTITUTE_CODE,\n      onChange: function onChange(e) {\n        return handleInputChangeForQualification(e, i);\n      },\n      placeholder: \"select your Institute\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 73\n      }\n    }, \"Select your institute\"), instituteList))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left',\n        width: '84%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 61\n      }\n    }, inputQualificationList.length !== 1 && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: function onClick() {\n        return handleRemoveClickForQualification(i);\n      },\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"red\",\n      name: \"remove\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 73\n      }\n    })), inputQualificationList.length - 1 === i && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: handleAddClickForQualification,\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"plus\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 73\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 53\n    }\n  }, \"Counselling details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 49\n    }\n  }), inputCounsellingDetailsList.map(function (x, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"graduation\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 69\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_COUNSELLING_SUBJECT_CODE\",\n      value: x.CT_COUNSELLING_SUBJECT_CODE,\n      onChange: function onChange(e) {\n        return handleInputChangeForCounselling(e, i);\n      },\n      placeholder: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 73\n      }\n    }, \"My Counselling Subjects(s)\"), counselling_subject_list)), /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"university\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 69\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_COUNSELLING_LEVEL_CODE\",\n      value: x.CT_COUNSELLING_LEVEL_CODE,\n      onChange: function onChange(e) {\n        return handleInputChangeForCounselling(e, i);\n      },\n      placeholder: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 73\n      }\n    }, \"Choose your level\"), counselling_level_list)), /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"user\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 69\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      iconPosition: \"left\",\n      placeholder: \"Hourly rate\",\n      type: \"text\",\n      name: \"COUNSELLOR_HOURLY_RATE\",\n      onChange: function onChange(e) {\n        return handleInputChangeForCounselling(e, i);\n      },\n      value: x.COUNSELLOR_HOURLY_RATE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 73\n      }\n    })), \"$\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left',\n        width: '84%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 61\n      }\n    }, inputCounsellingDetailsList.length !== 1 && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: function onClick() {\n        return handleRemoveClickForCounselling(i);\n      },\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"red\",\n      name: \"remove\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 73\n      }\n    })), inputCounsellingDetailsList.length - 1 === i && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: handleAddClickForCounselling,\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"plus\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 73\n      }\n    }))));\n  })))))))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Label","Container","Breadcrumb","Divider","Popup","List","Dropdown","Select","useForm","_AxiosInstance","Registration_First","formData","setForm","navigation","step","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_ID","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_INSTITUTE","COUNSELLOR_COUNSELLING_DETAILS","console","log","icon_name","setIcon_name","handleSubmit","register","errors","WS_Countries","setWS_Countries","WS_Institutes","setWS_Institutes","WS_Qualifications","setWS_Qualifications","WS_Counselling_Subjects","setWS_Counselling_Subjects","WS_Counselling_Levels","setWS_Counselling_Levels","CT_QUALIFICATION_CODE","CT_INSTITUTE_CODE","CT_QUALIFICATION_NAME","CT_INSTITUTE_NAME","inputQualificationList","setInputQualificationList","CT_COUNSELLING_SUBJECT_CODE","CT_COUNSELLING_LEVEL_CODE","CT_COUNSELLING_SUBJECT_NAME","CT_COUNSELLING_LEVEL_NAME","inputCounsellingDetailsList","setInputCounsellingDetailsList","get","then","res","data","countries","institutes","qualifications","counselling_subjects","counselling_levels","catch","err","countriesList","length","map","item","i","ID","CT_COUNTRY_CODE","CT_COUNTRY_NAME","qualificationsList","instituteList","counselling_subject_list","counselling_level_list","onSubmit","next","e","target","name","value","Counsellor_Countries","title","code","Counsellor_Subject","Counselling_Level","Counsellor_Qualification","Counsellor_Institute","id","handleInputChangeForQualification","index","list","find","x","handleRemoveClickForQualification","splice","handleAddClickForQualification","handleInputChangeForCounselling","handleRemoveClickForCounselling","handleAddClickForCounselling","width","textAlign","float","marginLeft","padding","backgroundColor","go","marginRight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select\r\n} from 'semantic-ui-react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport _AxiosInstance from '../../../Store/_AxiosInstance'\r\n\r\nconst Registration_First = ({ formData, setForm, navigation, step }) => {\r\n\r\n    const {\r\n        //FIRST REGISTRATION PAGE \r\n        COUNSELLOR_FIRST_NAME,\r\n        COUNSELLOR_LAST_NAME,\r\n        COUNSELLOR_EMAIL,\r\n        COUNSELLOR_PHONE_NUMBER,\r\n        COUNSELLOR_COUNTRY_CODE,\r\n        COUNSELLOR_COUNSELLING_SUBJECT_ID,\r\n        COUNSELLOR_HOURLY_RATE,\r\n        COUNSELLOR_QUALIFICATION_INSTITUTE,\r\n        COUNSELLOR_COUNSELLING_DETAILS\r\n\r\n    } = formData;\r\n    console.log(formData)\r\n\r\n    const [icon_name, setIcon_name] = useState('circle');\r\n\r\n    const { handleSubmit, register, errors } = useForm({});\r\n    const [WS_Countries, setWS_Countries] = useState({});\r\n    const [WS_Institutes, setWS_Institutes] = useState({});\r\n    const [WS_Qualifications, setWS_Qualifications] = useState({});\r\n    const [WS_Counselling_Subjects, setWS_Counselling_Subjects] = useState({});\r\n    const [WS_Counselling_Levels, setWS_Counselling_Levels] = useState({});\r\n    const [inputQualificationList, setInputQualificationList] = useState([{ CT_QUALIFICATION_CODE: \"\", CT_INSTITUTE_CODE: \"\", CT_QUALIFICATION_NAME: \"\", CT_INSTITUTE_NAME: \"\" }]);\r\n    const [inputCounsellingDetailsList, setInputCounsellingDetailsList] = useState([{\r\n        CT_COUNSELLING_SUBJECT_CODE: \"\", CT_COUNSELLING_LEVEL_CODE: \"\", COUNSELLOR_HOURLY_RATE: \"\",\r\n        CT_COUNSELLING_SUBJECT_NAME: \"\", CT_COUNSELLING_LEVEL_NAME: \"\"\r\n    }]); \r\n\r\n     useEffect(() => {\r\n        _AxiosInstance.get('form/list')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                const countries = res.data['COUNTRIES'];\r\n                const institutes = res.data['INSTITUTES'];\r\n                const qualifications = res.data['QUALIFICATIONS'];\r\n                const counselling_subjects = res.data['COUNSELLING_SUBJECTS'];\r\n                const counselling_levels = res.data['COUNSELLING_LEVELS'];\r\n                setWS_Countries(countries);\r\n                setWS_Institutes(institutes);\r\n                setWS_Qualifications(qualifications);\r\n                setWS_Counselling_Subjects(counselling_subjects);\r\n                setWS_Counselling_Levels(counselling_levels);\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n\r\n        return () => {\r\n            console.log(\"cleaned up state...\");\r\n            setWS_Countries({});\r\n            setWS_Qualifications({});\r\n            setWS_Institutes({});\r\n            setWS_Counselling_Subjects({});\r\n            setWS_Counselling_Levels({});\r\n            console.log(WS_Countries);\r\n        };\r\n\r\n    }, []);\r\n\r\n    let countriesList = WS_Countries.length > 0 && WS_Countries.map((item, i) => {\r\n        return (\r\n            <>\r\n                <option key={item.ID} value={item.CT_COUNTRY_CODE}>{item.CT_COUNTRY_NAME}</option>\r\n            </>\r\n        )\r\n    }, this);\r\n\r\n\r\n    let qualificationsList = WS_Qualifications.length > 0 && WS_Qualifications.map((item, i) => {\r\n        return (\r\n            <>\r\n                <option key={item.ID} value={item.CT_QUALIFICATION_CODE}>{item.CT_QUALIFICATION_NAME}</option>\r\n            </>\r\n        )\r\n    }, this);\r\n\r\n    let instituteList = WS_Institutes.length > 0 && WS_Institutes.map((item, i) => {\r\n        return (\r\n            <>\r\n                <option key={item.ID} value={item.CT_INSTITUTE_CODE}>{item.CT_INSTITUTE_NAME}</option>\r\n            </>\r\n        )\r\n    }, this);\r\n\r\n    let counselling_subject_list = WS_Counselling_Subjects.length > 0 && WS_Counselling_Subjects.map((item, i) => {\r\n        return (\r\n            <>\r\n                <option key={item.ID} value={item.CT_COUNSELLING_SUBJECT_CODE}>{item.CT_COUNSELLING_SUBJECT_NAME}</option>\r\n            </>\r\n        )\r\n    }, this);\r\n\r\n    let counselling_level_list = WS_Counselling_Levels.length > 0 && WS_Counselling_Levels.map((item, i) => {\r\n        return (\r\n            <>\r\n                <option key={item.ID} value={item.CT_COUNSELLING_LEVEL_CODE}>{item.CT_COUNSELLING_LEVEL_NAME}</option>\r\n            </>\r\n        )\r\n    }, this);\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        navigation.next();\r\n    };  \r\n\r\n    useEffect(() => {\r\n\r\n        const e = {\r\n            target: {\r\n                name: \"COUNSELLOR_QUALIFICATION_INSTITUTE\",\r\n                value: inputQualificationList\r\n            }\r\n        };\r\n        setForm(e);\r\n\r\n    }, [inputQualificationList])\r\n\r\n    useEffect(() => {\r\n\r\n        const e = {\r\n            target: {\r\n                name: \"COUNSELLOR_COUNSELLING_DETAILS\",\r\n                value: inputCounsellingDetailsList\r\n            }\r\n        };\r\n        setForm(e);\r\n\r\n    }, [inputCounsellingDetailsList])\r\n\r\n    const Counsellor_Countries = [\r\n        {\r\n            title: \"What kind of traveler are you?\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n    const Counsellor_Subject = [\r\n        {\r\n            title: \"Choose subject?\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n    const Counselling_Level = [\r\n        {\r\n            title: \"Choose Level?\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n    const Counsellor_Qualification = [\r\n        {\r\n            title: \"Choose Qualification\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n    const Counsellor_Institute = [\r\n        {\r\n            title: \"Choose Institute\",\r\n            name: [\r\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\r\n            ],\r\n            code: [0, 1, 2, 3]\r\n        }\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        if (step.id == 'Counsellor_details')\r\n            setIcon_name('circle')\r\n        else\r\n            setIcon_name('circle outline')\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (COUNSELLOR_QUALIFICATION_INSTITUTE.length > 0) {\r\n            setInputQualificationList(COUNSELLOR_QUALIFICATION_INSTITUTE)\r\n        }\r\n\r\n        if (COUNSELLOR_COUNSELLING_DETAILS.length > 0) {\r\n            setInputCounsellingDetailsList(COUNSELLOR_COUNSELLING_DETAILS)\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    // handle input change\r\n    const handleInputChangeForQualification = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputQualificationList];\r\n        list[index][name] = value;\r\n        console.log(WS_Qualifications);\r\n\r\n        if (name == \"CT_QUALIFICATION_CODE\") {\r\n            var CT_QUALIFICATION_NAME = WS_Qualifications.find(x => x.CT_QUALIFICATION_CODE === value).CT_QUALIFICATION_NAME;\r\n\r\n            list[index][\"CT_QUALIFICATION_NAME\"] = CT_QUALIFICATION_NAME;\r\n\r\n        }\r\n\r\n        if (name == \"CT_INSTITUTE_CODE\") {\r\n            var CT_INSTITUTE_NAME = WS_Institutes.find(x => x.CT_INSTITUTE_CODE === value).CT_INSTITUTE_NAME;\r\n            list[index][\"CT_INSTITUTE_NAME\"] = CT_INSTITUTE_NAME;\r\n        }\r\n        setInputQualificationList(list);\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClickForQualification = index => {\r\n        const list = [...inputQualificationList];\r\n        list.splice(index, 1);\r\n        setInputQualificationList(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClickForQualification = () => {\r\n        setInputQualificationList([...inputQualificationList, { CT_QUALIFICATION_CODE: \"\", CT_INSTITUTE_CODE: \"\", CT_QUALIFICATION_NAME: \"\", CT_INSTITUTE_NAME: \"\" }]);\r\n    };\r\n\r\n\r\n    // handle input change\r\n    const handleInputChangeForCounselling = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputCounsellingDetailsList];\r\n        list[index][name] = value; \r\n        if (name == \"CT_COUNSELLING_LEVEL_CODE\") {\r\n            var CT_COUNSELLING_LEVEL_NAME = WS_Counselling_Levels.find(x => x.CT_COUNSELLING_LEVEL_CODE === value).CT_COUNSELLING_LEVEL_NAME;\r\n            list[index][\"CT_COUNSELLING_LEVEL_NAME\"] = CT_COUNSELLING_LEVEL_NAME;\r\n    \r\n        }\r\n    \r\n        if (name == \"CT_COUNSELLING_SUBJECT_CODE\") {\r\n            var CT_COUNSELLING_SUBJECT_NAME = WS_Counselling_Subjects.find(x => x.CT_COUNSELLING_SUBJECT_CODE === value).CT_COUNSELLING_SUBJECT_NAME;\r\n            list[index][\"CT_COUNSELLING_SUBJECT_NAME\"] = CT_COUNSELLING_SUBJECT_NAME;\r\n        }\r\n        setInputCounsellingDetailsList(list);\r\n\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClickForCounselling = index => {\r\n        const list = [...inputCounsellingDetailsList];\r\n        list.splice(index, 1);\r\n        setInputCounsellingDetailsList(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClickForCounselling = () => {\r\n        setInputCounsellingDetailsList([...inputCounsellingDetailsList, {\r\n            CT_COUNSELLING_SUBJECT_CODE: \"\", CT_COUNSELLING_LEVEL_CODE: \"\", COUNSELLOR_HOURLY_RATE: \"\"\r\n        }]);\r\n    };\r\n\r\n    console.log(formData);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid>\r\n                <Grid.Column>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <center>\r\n                            <Segment inverted color='teal' size=\"mini\" style={{ width: '85%', textAlign: 'center' }}>\r\n                                <Container>\r\n                                    <div style={{ float: 'left', marginLeft: '2rem' }}>\r\n                                        <h4>Registation for Counsellor</h4>\r\n                                    </div>\r\n                                    <div style={{ float: 'right', padding: '1rem;' }}>\r\n                                        <Label as='a' onClick={() => navigation.next()}>\r\n                                            <Icon name='hand point right outline' />\r\n                                  Next\r\n                                </Label>\r\n                                    </div>\r\n                                </Container>\r\n                                <br />\r\n                                <Container style={{ padding: '1rem 2rem', textAlign: 'left' }}>\r\n                                    <div style={{ backgroundColor: 'transparent' }}>\r\n                                        <List horizontal >\r\n                                            <List.Item>\r\n                                                <Label as='a' circular onClick={() => navigation.go(0)}>\r\n                                                    <Icon name={icon_name} />\r\n                                                Personal Details&nbsp;\r\n                                            </Label>\r\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(1)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Photo&nbsp;\r\n                                            </Label>\r\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(2)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Description&nbsp;\r\n                                            </Label>\r\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(3)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Video&nbsp;\r\n                                            </Label>\r\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(4)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Availability&nbsp;\r\n                                            </Label>\r\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(5)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Verification&nbsp;\r\n                                            </Label>\r\n                                            <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(6)}>\r\n                                                    <Icon name=\"circle outline\" />\r\n                                                Summary&nbsp;\r\n                                            </Label>\r\n                                            </List.Item>\r\n                                        </List>\r\n                                    </div>\r\n                                </Container>\r\n                                <div style={{ width: '100%' }}>\r\n                                    <center>\r\n                                        <Segment style={{ width: '95%' }}>\r\n                                            <center>\r\n                                                <div style={{ width: '100%', textAlign: 'left' }}>\r\n                                                    <Label as='a' color='blue' ribbon>\r\n                                                        Personal Details\r\n                                        </Label>\r\n                                                </div>\r\n                                                <br />\r\n                                                <Form.Group widths='equal'>\r\n\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <input\r\n                                                            placeholder='First Name'\r\n                                                            type='text'\r\n                                                            name=\"COUNSELLOR_FIRST_NAME\"\r\n                                                            onChange={setForm}\r\n                                                            value={COUNSELLOR_FIRST_NAME}\r\n                                                        // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\r\n                                                        />\r\n                                                        {errors.COUNSELLOR_FIRST_NAME && <p className=\"customError\">Username invalid</p>}\r\n                                                    </Form.Field>\r\n\r\n\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                                    <input\r\n                                                            fluid\r\n                                                            icon='user'\r\n                                                            iconPosition='left'\r\n                                                            placeholder='Last Name'\r\n                                                            type='text'\r\n                                                            name=\"COUNSELLOR_LAST_NAME\"\r\n                                                            onChange={setForm}\r\n                                                            value={COUNSELLOR_LAST_NAME}\r\n                                                        // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\r\n                                                        />\r\n                                                        {errors.COUNSELLOR_LAST_NAME && <p className=\"customError\">Username invalid</p>}\r\n                                                    </Form.Field>\r\n\r\n\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group widths='equal'>\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Icon name=\"mail\" className=\"customIconsAlign\" />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                                    <input\r\n\r\n                                                            iconPosition='left'\r\n                                                            placeholder='Email'\r\n                                                            type='text'\r\n                                                            name=\"COUNSELLOR_EMAIL\"\r\n                                                            onChange={setForm}\r\n                                                            value={COUNSELLOR_EMAIL}\r\n                                                        // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\r\n                                                        />\r\n                                                        {errors.COUNSELLOR_EMAIL && <p className=\"customError\">Username invalid</p>}\r\n                                                    </Form.Field>\r\n\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Icon name=\"phone\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                            fluid\r\n                                                            placeholder='Phone number'\r\n                                                            type='text'\r\n                                                            name=\"COUNSELLOR_PHONE_NUMBER\"\r\n                                                            onChange={setForm}\r\n                                                            value={COUNSELLOR_PHONE_NUMBER}\r\n                                                        // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\r\n                                                        />\r\n                                                        {errors.COUNSELLOR_PHONE_NUMBER && <p className=\"customError\">Username invalid</p>}\r\n                                                    </Form.Field>\r\n\r\n                                                </Form.Group>\r\n\r\n\r\n                                                <Form.Group widths='equal'>\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Icon name=\"world\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <select className=\"\" name=\"COUNSELLOR_COUNTRY_CODE\" value={COUNSELLOR_COUNTRY_CODE} onChange={setForm} placeholder=\"select your country\">\r\n                                                            <option selected hidden>Select your country</option>\r\n                                                            {countriesList}\r\n                                                        </select>\r\n                                                    </Form.Field>\r\n\r\n                                                    <Form.Field>\r\n                                                    </Form.Field>\r\n\r\n                                                </Form.Group>\r\n                                                <br />\r\n                                                <div style={{ width: '100%', textAlign: 'left' }}>\r\n                                                    <Label as='a' color='blue' ribbon>\r\n                                                        Educational details\r\n                                                 </Label>\r\n                                                </div>\r\n                                                <br />\r\n\r\n                                                {inputQualificationList.map((x, i) => {\r\n                                                    return (\r\n                                                        <React.Fragment>\r\n                                                            <Form.Group widths='equal'>\r\n                                                                <Form.Field className=\"CustomForm\">\r\n                                                                    <Icon name=\"graduation\" className=\"customIconsAlign\" />\r\n                                                                 &nbsp;&nbsp;&nbsp;\r\n                                                                <select\r\n                                                                        name=\"CT_QUALIFICATION_CODE\"\r\n                                                                        value={x.CT_QUALIFICATION_CODE}\r\n                                                                        onChange={(e) => handleInputChangeForQualification(e, i)}\r\n                                                                        placeholder=\"select your Qualification\"\r\n                                                                    >\r\n                                                                        <option selected hidden>Select Your Qualification</option>\r\n                                                                        {qualificationsList}\r\n                                                                    </select>\r\n                                                                </Form.Field>\r\n                                                                <Form.Field className=\"CustomForm\">\r\n                                                                    <Icon name=\"university\" className=\"customIconsAlign\" />\r\n                                                                    &nbsp;&nbsp;&nbsp;\r\n                                                                    <select\r\n                                                                        name=\"CT_INSTITUTE_CODE\"\r\n                                                                        value={x.CT_INSTITUTE_CODE}\r\n                                                                        onChange={(e) => handleInputChangeForQualification(e, i)}\r\n                                                                        placeholder=\"select your Institute\"\r\n                                                                    >\r\n                                                                        <option selected hidden>\r\n                                                                            Select your institute\r\n                                                                </option>\r\n                                                                        {instituteList}\r\n                                                                    </select>\r\n                                                                </Form.Field>\r\n                                                            </Form.Group>\r\n                                                            <div style={{ textAlign: 'left', width: '84%' }}>\r\n                                                                {inputQualificationList.length !== 1 && (\r\n                                                                    <Label as=\"a\" onClick={() => handleRemoveClickForQualification(i)} circular style={{ marginRight: '10px' }}>\r\n                                                                        <Icon color=\"red\" name='remove' style={{ margin: '0px' }} />\r\n                                                                    </Label>\r\n                                                                )}\r\n\r\n                                                                {inputQualificationList.length - 1 === i && (\r\n                                                                    <Label as=\"a\" onClick={handleAddClickForQualification} circular style={{ marginRight: '10px' }}>\r\n                                                                        <Icon color=\"green\" name='plus' style={{ margin: '0px' }} />\r\n                                                                    </Label>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                        </React.Fragment>\r\n                                                    );\r\n                                                })}\r\n\r\n                                                <br />\r\n                                                <div style={{ width: '100%', textAlign: 'left' }}>\r\n                                                    <Label as='a' color='blue' ribbon>\r\n                                                        Counselling details\r\n                                            </Label>\r\n                                                </div>\r\n                                                <br />\r\n\r\n                                                {inputCounsellingDetailsList.map((x, i) => {\r\n                                                    return (\r\n\r\n                                                        <React.Fragment>\r\n                                                            <Form.Group widths='equal'>\r\n                                                                <Form.Field className=\"CustomForm\">\r\n                                                                    <Icon name=\"graduation\" className=\"customIconsAlign\" />\r\n                                                                 &nbsp;&nbsp;&nbsp;\r\n                                                                <select\r\n                                                                        name=\"CT_COUNSELLING_SUBJECT_CODE\"\r\n                                                                        value={x.CT_COUNSELLING_SUBJECT_CODE}\r\n                                                                        onChange={(e) => handleInputChangeForCounselling(e, i)}\r\n                                                                        placeholder=\"\"\r\n                                                                    >\r\n                                                                        <option selected hidden>My Counselling Subjects(s)</option>\r\n                                                                        {counselling_subject_list}\r\n                                                                    </select>\r\n                                                                </Form.Field>\r\n                                                                <Form.Field className=\"CustomForm\">\r\n                                                                    <Icon name=\"university\" className=\"customIconsAlign\" />\r\n                                                                    &nbsp;&nbsp;&nbsp;\r\n                                                                    <select\r\n                                                                        name=\"CT_COUNSELLING_LEVEL_CODE\"\r\n                                                                        value={x.CT_COUNSELLING_LEVEL_CODE}\r\n                                                                        onChange={(e) => handleInputChangeForCounselling(e, i)}\r\n                                                                        placeholder=\"\"\r\n                                                                    >\r\n                                                                        <option selected hidden>\r\n                                                                            Choose your level\r\n                                                                </option>\r\n                                                                        {counselling_level_list}\r\n                                                                    </select>\r\n                                                                </Form.Field>\r\n                                                                <Form.Field className=\"CustomForm\">\r\n                                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                                        &nbsp;&nbsp;&nbsp;\r\n                                                                        <input\r\n                                                                        iconPosition='left'\r\n                                                                        placeholder='Hourly rate'\r\n                                                                        type='text'\r\n                                                                        name=\"COUNSELLOR_HOURLY_RATE\"\r\n                                                                        onChange={(e) => handleInputChangeForCounselling(e, i)}\r\n                                                                        value={x.COUNSELLOR_HOURLY_RATE}\r\n\r\n                                                                    />\r\n                                                                </Form.Field>\r\n                                                                 $\r\n                                                            </Form.Group>\r\n                                                            <div style={{ textAlign: 'left', width: '84%' }}>\r\n                                                                {inputCounsellingDetailsList.length !== 1 && (\r\n                                                                    <Label as=\"a\" onClick={() => handleRemoveClickForCounselling(i)} circular style={{ marginRight: '10px' }}>\r\n                                                                        <Icon color=\"red\" name='remove' style={{ margin: '0px' }} />\r\n                                                                    </Label>\r\n                                                                )}\r\n\r\n                                                                {inputCounsellingDetailsList.length - 1 === i && (\r\n                                                                    <Label as=\"a\" onClick={handleAddClickForCounselling} circular style={{ marginRight: '10px' }}>\r\n                                                                        <Icon color=\"green\" name='plus' style={{ margin: '0px' }} />\r\n                                                                    </Label>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                        </React.Fragment>\r\n                                                    );\r\n                                                })}\r\n                                            </center>\r\n                                        </Segment>\r\n                                    </center>\r\n                                </div>\r\n                            </Segment>\r\n                        </center>\r\n                    </Form>\r\n\r\n                </Grid.Column>\r\n            </Grid >\r\n        </React.Fragment >\r\n    )\r\n\r\n}\r\n\r\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}