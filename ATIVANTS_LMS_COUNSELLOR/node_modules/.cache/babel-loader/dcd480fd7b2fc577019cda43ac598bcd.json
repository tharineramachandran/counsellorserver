{"ast":null,"code":"\"use strict\"; // Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserRefreshClient = void 0;\n\nvar oauth2client_1 = require(\"./oauth2client\");\n\nvar UserRefreshClient = /*#__PURE__*/function (_oauth2client_1$OAuth) {\n  _inherits(UserRefreshClient, _oauth2client_1$OAuth);\n\n  var _super = _createSuper(UserRefreshClient);\n\n  function UserRefreshClient(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n    var _this;\n\n    _classCallCheck(this, UserRefreshClient);\n\n    var opts = optionsOrClientId && typeof optionsOrClientId === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret: clientSecret,\n      refreshToken: refreshToken,\n      eagerRefreshThresholdMillis: eagerRefreshThresholdMillis,\n      forceRefreshOnFailure: forceRefreshOnFailure\n    };\n    _this = _super.call(this, {\n      clientId: opts.clientId,\n      clientSecret: opts.clientSecret,\n      eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n      forceRefreshOnFailure: opts.forceRefreshOnFailure\n    });\n    _this._refreshToken = opts.refreshToken;\n    _this.credentials.refresh_token = opts.refreshToken;\n    return _this;\n  }\n  /**\r\n   * Refreshes the access token.\r\n   * @param refreshToken An ignored refreshToken..\r\n   * @param callback Optional callback.\r\n   */\n\n\n  _createClass(UserRefreshClient, [{\n    key: \"refreshTokenNoCache\",\n    value: function () {\n      var _refreshTokenNoCache = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      refreshToken) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _get(_getPrototypeOf(UserRefreshClient.prototype), \"refreshTokenNoCache\", this).call(this, this._refreshToken));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function refreshTokenNoCache(_x) {\n        return _refreshTokenNoCache.apply(this, arguments);\n      }\n\n      return refreshTokenNoCache;\n    }()\n    /**\r\n     * Create a UserRefreshClient credentials instance using the given input\r\n     * options.\r\n     * @param json The input object.\r\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (!json) {\n        throw new Error('Must pass in a JSON object containing the user refresh token');\n      }\n\n      if (json.type !== 'authorized_user') {\n        throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n      }\n\n      if (!json.client_id) {\n        throw new Error('The incoming JSON object does not contain a client_id field');\n      }\n\n      if (!json.client_secret) {\n        throw new Error('The incoming JSON object does not contain a client_secret field');\n      }\n\n      if (!json.refresh_token) {\n        throw new Error('The incoming JSON object does not contain a refresh_token field');\n      }\n\n      this._clientId = json.client_id;\n      this._clientSecret = json.client_secret;\n      this._refreshToken = json.refresh_token;\n      this.credentials.refresh_token = json.refresh_token;\n      this.quotaProjectId = json.quota_project_id;\n    }\n  }, {\n    key: \"fromStream\",\n    value: function fromStream(inputStream, callback) {\n      if (callback) {\n        this.fromStreamAsync(inputStream).then(function () {\n          return callback();\n        }, callback);\n      } else {\n        return this.fromStreamAsync(inputStream);\n      }\n    }\n  }, {\n    key: \"fromStreamAsync\",\n    value: function () {\n      var _fromStreamAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputStream) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (!inputStream) {\n                    return reject(new Error('Must pass in a stream containing the user refresh token.'));\n                  }\n\n                  var s = '';\n                  inputStream.setEncoding('utf8').on('error', reject).on('data', function (chunk) {\n                    return s += chunk;\n                  }).on('end', function () {\n                    try {\n                      var data = JSON.parse(s);\n\n                      _this2.fromJSON(data);\n\n                      return resolve();\n                    } catch (err) {\n                      return reject(err);\n                    }\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fromStreamAsync(_x2) {\n        return _fromStreamAsync.apply(this, arguments);\n      }\n\n      return fromStreamAsync;\n    }()\n  }]);\n\n  return UserRefreshClient;\n}(oauth2client_1.OAuth2Client);\n\nexports.UserRefreshClient = UserRefreshClient;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/node_modules/google-auth-library/build/src/auth/refreshclient.js"],"names":["Object","defineProperty","exports","value","UserRefreshClient","oauth2client_1","require","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","forceRefreshOnFailure","opts","clientId","_refreshToken","credentials","refresh_token","json","Error","type","client_id","client_secret","_clientId","_clientSecret","quotaProjectId","quota_project_id","inputStream","callback","fromStreamAsync","then","Promise","resolve","reject","s","setEncoding","on","chunk","data","JSON","parse","fromJSON","err","OAuth2Client"],"mappings":"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","sourcesContent":["\"use strict\";\r\n// Copyright 2015 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UserRefreshClient = void 0;\r\nconst oauth2client_1 = require(\"./oauth2client\");\r\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\r\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\r\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\r\n            ? optionsOrClientId\r\n            : {\r\n                clientId: optionsOrClientId,\r\n                clientSecret,\r\n                refreshToken,\r\n                eagerRefreshThresholdMillis,\r\n                forceRefreshOnFailure,\r\n            };\r\n        super({\r\n            clientId: opts.clientId,\r\n            clientSecret: opts.clientSecret,\r\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\r\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\r\n        });\r\n        this._refreshToken = opts.refreshToken;\r\n        this.credentials.refresh_token = opts.refreshToken;\r\n    }\r\n    /**\r\n     * Refreshes the access token.\r\n     * @param refreshToken An ignored refreshToken..\r\n     * @param callback Optional callback.\r\n     */\r\n    async refreshTokenNoCache(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    refreshToken) {\r\n        return super.refreshTokenNoCache(this._refreshToken);\r\n    }\r\n    /**\r\n     * Create a UserRefreshClient credentials instance using the given input\r\n     * options.\r\n     * @param json The input object.\r\n     */\r\n    fromJSON(json) {\r\n        if (!json) {\r\n            throw new Error('Must pass in a JSON object containing the user refresh token');\r\n        }\r\n        if (json.type !== 'authorized_user') {\r\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\r\n        }\r\n        if (!json.client_id) {\r\n            throw new Error('The incoming JSON object does not contain a client_id field');\r\n        }\r\n        if (!json.client_secret) {\r\n            throw new Error('The incoming JSON object does not contain a client_secret field');\r\n        }\r\n        if (!json.refresh_token) {\r\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\r\n        }\r\n        this._clientId = json.client_id;\r\n        this._clientSecret = json.client_secret;\r\n        this._refreshToken = json.refresh_token;\r\n        this.credentials.refresh_token = json.refresh_token;\r\n        this.quotaProjectId = json.quota_project_id;\r\n    }\r\n    fromStream(inputStream, callback) {\r\n        if (callback) {\r\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\r\n        }\r\n        else {\r\n            return this.fromStreamAsync(inputStream);\r\n        }\r\n    }\r\n    async fromStreamAsync(inputStream) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!inputStream) {\r\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\r\n            }\r\n            let s = '';\r\n            inputStream\r\n                .setEncoding('utf8')\r\n                .on('error', reject)\r\n                .on('data', chunk => (s += chunk))\r\n                .on('end', () => {\r\n                try {\r\n                    const data = JSON.parse(s);\r\n                    this.fromJSON(data);\r\n                    return resolve();\r\n                }\r\n                catch (err) {\r\n                    return reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.UserRefreshClient = UserRefreshClient;\r\n//# sourceMappingURL=refreshclient.js.map"]},"metadata":{},"sourceType":"script"}