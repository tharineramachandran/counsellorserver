{"ast":null,"code":"\"use strict\"; // Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginTicket = void 0;\n\nvar LoginTicket = /*#__PURE__*/function () {\n  /**\r\n   * Create a simple class to extract user ID from an ID Token\r\n   *\r\n   * @param {string} env Envelope of the jwt\r\n   * @param {TokenPayload} pay Payload of the jwt\r\n   * @constructor\r\n   */\n  function LoginTicket(env, pay) {\n    _classCallCheck(this, LoginTicket);\n\n    this.envelope = env;\n    this.payload = pay;\n  }\n\n  _createClass(LoginTicket, [{\n    key: \"getEnvelope\",\n    value: function getEnvelope() {\n      return this.envelope;\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload() {\n      return this.payload;\n    }\n    /**\r\n     * Create a simple class to extract user ID from an ID Token\r\n     *\r\n     * @return The user ID\r\n     */\n\n  }, {\n    key: \"getUserId\",\n    value: function getUserId() {\n      var payload = this.getPayload();\n\n      if (payload && payload.sub) {\n        return payload.sub;\n      }\n\n      return null;\n    }\n    /**\r\n     * Returns attributes from the login ticket.  This can contain\r\n     * various information about the user session.\r\n     *\r\n     * @return The envelope and payload\r\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return {\n        envelope: this.getEnvelope(),\n        payload: this.getPayload()\n      };\n    }\n  }]);\n\n  return LoginTicket;\n}();\n\nexports.LoginTicket = LoginTicket;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/node_modules/google-auth-library/build/src/auth/loginticket.js"],"names":["Object","defineProperty","exports","value","LoginTicket","env","pay","envelope","payload","getPayload","sub","getEnvelope"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;IACMA,W;AACF;;;;;;;AAOA,uBAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AAAA;;AAClB,SAAKC,QAAL,GAAgBF,GAAhB;AACA,SAAKG,OAAL,GAAeF,GAAf;AACH;;;;kCACa;AACV,aAAO,KAAKC,QAAZ;AACH;;;iCACY;AACT,aAAO,KAAKC,OAAZ;AACH;AACD;;;;;;;;gCAKY;AACR,UAAMA,OAAO,GAAG,KAAKC,UAAL,EAAhB;;AACA,UAAID,OAAO,IAAIA,OAAO,CAACE,GAAvB,EAA4B;AACxB,eAAOF,OAAO,CAACE,GAAf;AACH;;AACD,aAAO,IAAP;AACH;AACD;;;;;;;;;oCAMgB;AACZ,aAAO;AAAEH,QAAAA,QAAQ,EAAE,KAAKI,WAAL,EAAZ;AAAgCH,QAAAA,OAAO,EAAE,KAAKC,UAAL;AAAzC,OAAP;AACH;;;;;;AAELP,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\r\n// Copyright 2014 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LoginTicket = void 0;\r\nclass LoginTicket {\r\n    /**\r\n     * Create a simple class to extract user ID from an ID Token\r\n     *\r\n     * @param {string} env Envelope of the jwt\r\n     * @param {TokenPayload} pay Payload of the jwt\r\n     * @constructor\r\n     */\r\n    constructor(env, pay) {\r\n        this.envelope = env;\r\n        this.payload = pay;\r\n    }\r\n    getEnvelope() {\r\n        return this.envelope;\r\n    }\r\n    getPayload() {\r\n        return this.payload;\r\n    }\r\n    /**\r\n     * Create a simple class to extract user ID from an ID Token\r\n     *\r\n     * @return The user ID\r\n     */\r\n    getUserId() {\r\n        const payload = this.getPayload();\r\n        if (payload && payload.sub) {\r\n            return payload.sub;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns attributes from the login ticket.  This can contain\r\n     * various information about the user session.\r\n     *\r\n     * @return The envelope and payload\r\n     */\r\n    getAttributes() {\r\n        return { envelope: this.getEnvelope(), payload: this.getPayload() };\r\n    }\r\n}\r\nexports.LoginTicket = LoginTicket;\r\n//# sourceMappingURL=loginticket.js.map"]},"metadata":{},"sourceType":"script"}