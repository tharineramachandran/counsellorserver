{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\UserDashboard\\\\layout\\\\CounsellorCreateSessionModel.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Button, Form, Header, Image, Input, Dropdown, Grid, Message, Segment, Card, Img, Icon, Table, Label, Container, List, Popup } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from 'react-datepicker';\n\nvar axios = require('axios');\n\nvar daysNotAvailableList = [];\n\nvar CreateSession = /*#__PURE__*/function (_React$Component) {\n  _inherits(CreateSession, _React$Component);\n\n  var _super = _createSuper(CreateSession);\n\n  function CreateSession(props) {\n    var _this;\n\n    _classCallCheck(this, CreateSession);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      person: [],\n      sessionDate: '',\n      sessionStart: '',\n      sessionEnd: '',\n      startDate: \"\",\n      slots: [],\n      slotValue: '',\n      formWarning: '',\n      slotOptions: []\n    };\n\n    _this.isWeekday = function (date) {\n      var day = date.getDay();\n      return day !== 0 && !daysNotAvailableList.includes(day);\n    };\n\n    _this.slotChange = function (e, data) {\n      console.log(\"---------------------------------\");\n\n      _this.setState({\n        slotValue: data.value,\n        formWarning: ''\n      });\n\n      console.log(data);\n    };\n\n    _this.submitRequest = function () {\n      var sessionDetails = undefined;\n\n      if (_this.state.slotValue && _this.state.startDate) {\n        if (Number.isInteger(parseInt(_this.props.UserID)) && Number.isInteger(parseInt(_this.props.CounsellorID))) {\n          console.log(_this.state.slots);\n\n          for (var session in _this.state.slots) {\n            if (_this.state.slots[session].id == _this.state.slotValue) {\n              console.log(session);\n              sessionDetails = _this.state.slots[session];\n              break;\n            }\n          }\n\n          var data = {\n            session: _this.state.slotValue,\n            date: _this.state.startDate,\n            userId: _this.props.UserID,\n            counsellorId: _this.props.CounsellorID,\n            sessionDetails: sessionDetails\n          };\n          console.log(data);\n          axios.post(\"http://localhost:5000/addevent\", data).then(function (res) {\n            console.log(res);\n            console.log(res.data);\n            toast.success('Request is sent to counsellor!', {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: true,\n              closeOnClick: true,\n              pauseOnHover: false,\n              draggable: true,\n              progress: ''\n            });\n          }).catch(function (error) {\n            if (error.response) {\n              toast.error('Unsuccessful resquest counsellor', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: ''\n              });\n            }\n          });\n        } else {\n          toast.error('Session Expired. Please relogin', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: ''\n          });\n        } // axios.post(\"http://localhost:5000/addevent\", data)      \n        // .then(res => console.log(res)\n        // if (res){}\n        // )      \n        // .catch(err => console.log(err));\n        //   console.log([this.state.slotValue, this.state.startDate]);\n\n      } else {\n        _this.setState({\n          formWarning: \"Invalid form\"\n        });\n      }\n    };\n\n    _this.onDateChange = function (date) {\n      console.log([\"ddddddddddddddddd\", date]);\n\n      _this.setState({\n        startDate: date,\n        slotValue: date\n      });\n\n      var slot = [];\n      var slotOptions = [];\n\n      if (date.getDay() == 1) {\n        slot = _this.props.person.counselling_monday;\n      }\n\n      if (date.getDay() == 2) {\n        slot = _this.props.person.counselling_tuesday;\n      }\n\n      if (date.getDay() == 3) {\n        slot = _this.props.person.counselling_wednesday;\n      }\n\n      if (date.getDay() == 4) {\n        slot = _this.props.person.counselling_thursday;\n      }\n\n      if (date.getDay() == 5) {\n        slot = _this.props.person.counselling_friday;\n      }\n\n      if (date.getDay() == 6) {\n        slot = _this.props.person.counselling_saturday;\n      }\n\n      for (var details in slot) {\n        slotOptions.push({\n          key: slot[details].id,\n          value: slot[details].id,\n          text: slot[details].ct_from + \" to \" + slot[details].ct_to\n        });\n      }\n\n      _this.setState({\n        slots: slot,\n        slotOptions: slotOptions,\n        formWarning: '',\n        slotValue: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateSession, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var slotOptions = [{\n        key: 'af',\n        value: 'af',\n        text: 'Afghanistan'\n      }, {\n        key: 'ax',\n        value: 'ax',\n        text: 'Aland Islands'\n      }, {\n        key: 'al',\n        value: 'al',\n        text: 'Albania'\n      }, {\n        key: 'dz',\n        value: 'dz',\n        text: 'Algeria'\n      }];\n      console.log(this.props);\n      console.log(this.state);\n\n      if (this.props.person.counselling_monday.length < 1) {\n        daysNotAvailableList.push(1);\n      }\n\n      if (this.props.person.counselling_tuesday.length < 1) {\n        daysNotAvailableList.push(2);\n      }\n\n      if (this.props.person.counselling_wednesday.length < 1) {\n        daysNotAvailableList.push(3);\n      }\n\n      if (this.props.person.counselling_thursday.length < 1) {\n        daysNotAvailableList.push(4);\n      }\n\n      if (this.props.person.counselling_friday.length < 1) {\n        daysNotAvailableList.push(5);\n      }\n\n      if (this.props.person.counselling_saturday.length < 1) {\n        daysNotAvailableList.push(6);\n      }\n\n      console.log(this.props.CounsellorID);\n      axios.get(\"http://localhost:5000/Counsellor/GetSingleCounsellorDetails/\" + this.state.CounsellorID).then(function (res) {\n        console.log(res);\n        var person = res.data.counsellor;\n\n        _this2.setState({\n          person: person,\n          slotOptions: slotOptions,\n          formWarning: ''\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 10\n        }\n      }, \"Choose a day\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 38\n        }\n      }), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.onDateChange,\n        filterDate: this.isWeekday,\n        onCalendarClose: this.handleCalendarClose,\n        placeholderText: \"Select a day for meeting \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      })), this.state.slots.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, \"Choose a slot on the day\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Select, {\n        placeholder: \"Add slot timing\",\n        selection: true,\n        value: this.state.slotValue,\n        onChange: this.slotChange,\n        options: this.state.slotOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 3\n        }\n      }))) : /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 12\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, this.state.formWarning), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"ui button\",\n        onClick: this.submitRequest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return CreateSession;\n}(React.Component);\n\nexport default CreateSession;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/UserDashboard/layout/CounsellorCreateSessionModel.js"],"names":["React","useState","useContext","useEffect","Button","Form","Header","Image","Input","Dropdown","Grid","Message","Segment","Card","Img","Icon","Table","Label","Container","List","Popup","ToastContainer","toast","DatePicker","axios","require","daysNotAvailableList","CreateSession","props","state","person","sessionDate","sessionStart","sessionEnd","startDate","slots","slotValue","formWarning","slotOptions","isWeekday","date","day","getDay","includes","slotChange","e","data","console","log","setState","value","submitRequest","sessionDetails","undefined","Number","isInteger","parseInt","UserID","CounsellorID","session","id","userId","counsellorId","post","then","res","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","catch","error","response","onDateChange","slot","counselling_monday","counselling_tuesday","counselling_wednesday","counselling_thursday","counselling_friday","counselling_saturday","details","push","key","text","ct_from","ct_to","length","get","counsellor","handleCalendarClose","color","Component"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Header,\r\n  Image,\r\n  Input, Dropdown, Grid,\r\n  Message,\r\n  Segment, Card, Img, Icon,\r\n  Table, Label, Container, List, Popup\r\n} from \"semantic-ui-react\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from 'react-datepicker';\r\nconst axios = require('axios');\r\n\r\nvar daysNotAvailableList = [];\r\nclass CreateSession extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n  }\r\n\r\n  state = {\r\n    person: [],\r\n    sessionDate: '',\r\n    sessionStart: '',\r\n    sessionEnd: '',\r\n    startDate: \"\",\r\n    slots: [],\r\n    slotValue: '',\r\n    formWarning: '',\r\n    slotOptions: []\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const slotOptions = [\r\n      { key: 'af', value: 'af', text: 'Afghanistan' },\r\n      { key: 'ax', value: 'ax', text: 'Aland Islands' },\r\n      { key: 'al', value: 'al', text: 'Albania' },\r\n      { key: 'dz', value: 'dz', text: 'Algeria' },\r\n    ]\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    if (this.props.person.counselling_monday.length < 1) {\r\n\r\n      daysNotAvailableList.push(1);\r\n    }\r\n    if (this.props.person.counselling_tuesday.length < 1) {\r\n\r\n      daysNotAvailableList.push(2);\r\n    } if (this.props.person.counselling_wednesday.length < 1) {\r\n\r\n      daysNotAvailableList.push(3);\r\n    } if (this.props.person.counselling_thursday.length < 1) {\r\n\r\n      daysNotAvailableList.push(4);\r\n\r\n    } if (this.props.person.counselling_friday.length < 1) {\r\n\r\n      daysNotAvailableList.push(5);\r\n    }\r\n    if (this.props.person.counselling_saturday.length < 1) {\r\n\r\n      daysNotAvailableList.push(6);\r\n    }\r\n    console.log(this.props.CounsellorID);\r\n    axios.get(`http://localhost:5000/Counsellor/GetSingleCounsellorDetails/` + this.state.CounsellorID\r\n    )\r\n      .then(res => {\r\n        console.log(res);\r\n        const person = res.data.counsellor;\r\n        this.setState({ person: person, slotOptions: slotOptions, formWarning: '' });\r\n      })\r\n  }\r\n  isWeekday = date => {\r\n    const day = date.getDay();\r\n    return day !== 0 && !(daysNotAvailableList.includes(day));\r\n  };\r\n  slotChange = (e, data) => {\r\n    console.log(\"---------------------------------\");\r\n    this.setState({ slotValue: data.value, formWarning: '' });\r\n\r\n    console.log(data);\r\n  };\r\n\r\n  submitRequest = () => {\r\nvar sessionDetails = undefined ;\r\n    if (this.state.slotValue && this.state.startDate) {\r\n      if (Number.isInteger(parseInt(this.props.UserID)   )  && Number.isInteger(parseInt(this.props.CounsellorID)   ) ) {\r\n      console.log( this.state.slots);   \r\n      for (var session in this.state.slots) {\r\n      \r\n        if (  this.state.slots[session].id == this.state.slotValue) {\r\n          \r\n        console.log(session);\r\n        sessionDetails = this.state.slots[session];\r\n        break;\r\n      }\r\n      }\r\n      const data = {\r\n        session: this.state.slotValue,\r\n        date:    this.state.startDate ,\r\n        userId: this.props.UserID,\r\n        counsellorId: this.props.CounsellorID,\r\n        sessionDetails :sessionDetails\r\n      };\r\n\r\n      console.log(data)\r\n       \r\n\r\n\r\naxios.post(`http://localhost:5000/addevent`, data)\r\n.then(res => {\r\n    console.log(res);\r\n    console.log(res.data);\r\n     \r\n\r\n        toast.success('Request is sent to counsellor!', {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: true,\r\n            progress: '',\r\n        });\r\n         \r\n}).catch((error) => {\r\n    if (error.response) {\r\n        \r\n        toast.error('Unsuccessful resquest counsellor', {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: true,\r\n            progress: '',\r\n        });\r\n \r\n          \r\n        }\r\n\r\n \r\n});\r\n \r\n\r\n\r\n\r\n} else {\r\n\r\n  toast.error('Session Expired. Please relogin', {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: true,\r\n    progress: '',\r\n});\r\n\r\n}\r\n\r\n \r\n      // axios.post(\"http://localhost:5000/addevent\", data)      \r\n      // .then(res => console.log(res)\r\n      \r\n      // if (res){}\r\n      \r\n      // )      \r\n      // .catch(err => console.log(err));\r\n   //   console.log([this.state.slotValue, this.state.startDate]);\r\n    } else {\r\n\r\n      this.setState({ formWarning: \"Invalid form\" });\r\n    }\r\n  };\r\n   \r\n  onDateChange = (date) => {\r\nconsole.log([\"ddddddddddddddddd\",date]);\r\nthis.setState({ startDate: date,slotValue:date });\r\n    var slot = [];\r\n    var slotOptions = [];\r\n\r\n    if (date.getDay() == 1) {\r\n\r\n      slot = this.props.person.counselling_monday;\r\n    }\r\n    if (date.getDay() == 2) {\r\n\r\n      slot = this.props.person.counselling_tuesday;\r\n    }\r\n    if (date.getDay() == 3) {\r\n\r\n      slot = this.props.person.counselling_wednesday;\r\n    }\r\n    if (date.getDay() == 4) {\r\n\r\n      slot = this.props.person.counselling_thursday;\r\n    }\r\n\r\n    if (date.getDay() == 5) {\r\n\r\n      slot = this.props.person.counselling_friday;\r\n    } if (date.getDay() == 6) {\r\n\r\n      slot = this.props.person.counselling_saturday;\r\n    }\r\n \r\n\r\n    for (var details in slot) {\r\n \r\n      slotOptions.push({ key: slot[details].id, value: slot[details].id, text: slot[details].ct_from + \" to \" + slot[details].ct_to });\r\n\r\n    }\r\n \r\n    this.setState({ slots: slot, slotOptions: slotOptions, formWarning: '', slotValue: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container> <Segment>\r\n\r\n\r\n\r\n        <Form  > \r\n         <label>Choose a day</label> <br/>< Form.Group widths='equal'>\r\n        <DatePicker\r\n          selected={this.state.startDate}\r\n          onChange={this.onDateChange}\r\n          filterDate={this.isWeekday}\r\n          onCalendarClose={this.handleCalendarClose} \r\n          placeholderText=\"Select a day for meeting \" />\r\n\r\n</Form.Group>\r\n\r\n        {this.state.slots.length > 0 ? (<div>\r\n        \r\n          < br />\r\n          <label>Choose a slot on the day</label> <br/>\r\n            < Form.Group widths='equal'>  \r\n\r\n  <Form.Select  placeholder='Add slot timing'\r\n             \r\n            selection value={this.state.slotValue} onChange={this.slotChange} options={this.state.slotOptions} />\r\n         </Form.Group></div>) :\r\n          (<strong>\r\n\r\n          </strong>)\r\n        }\r\n      \r\n\r\n      \r\n        </Form>\r\n      </Segment>  \r\n        <p style={{ color: 'red' }}>{this.state.formWarning}</p>\r\n        < br />\r\n        <button class=\"ui button\" onClick={this.submitRequest}>Submit</button>\r\n\r\n      </Container>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateSession;\r\n\r\n"]},"metadata":{},"sourceType":"module"}