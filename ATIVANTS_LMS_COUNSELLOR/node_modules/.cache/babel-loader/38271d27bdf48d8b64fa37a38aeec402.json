{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\_Counsellor_Registration.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Checkbox, Divider, List, Label } from 'semantic-ui-react';\nimport { Authorize } from \"../../MainComponents/DesktopComponent\";\nimport axios from '../../Store/_AxiosInstance';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport googleLogin from \"google-auth-library\";\n\nvar Counsellor_Registration = function Counsellor_Registration(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(window.innerWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defHeight = _useState4[0],\n      setHeight = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ModalLogin = _useState6[0],\n      setModalLogin = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ModalConsellorTypeSingup = _useState8[0],\n      setModalConsellorTypeSingup = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ModalStudentSignUp = _useState10[0],\n      setModalStudentSignUp = _useState10[1];\n\n  var _useState11 = useState({\n    TX_USER_NAME: \"\",\n    TX_USER_EMAIL: \"\",\n    TX_USER_PASSWORD: \"\" // USER_CONFIRM_PASSWORD:\"\"\n\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputs = _useState12[0],\n      setInputs = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorLoginMessage = _useState14[0],\n      setErrorLoginMessage = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      errorSignUpMessage = _useState16[0],\n      setErrorSignUpMessage = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      rememberMe = _useState18[0],\n      setRememberMe = _useState18[1];\n\n  var TX_USER_NAME = inputs.TX_USER_NAME,\n      TX_USER_EMAIL = inputs.TX_USER_EMAIL,\n      TX_USER_PASSWORD = inputs.TX_USER_PASSWORD;\n  var setAuth = useContext(Authorize);\n  var setCount = useContext(Authorize);\n  useEffect(function () {\n    if (localStorage.checkbox && localStorage.username !== \"\") {\n      setRememberMe(localStorage.checkbox);\n      setInputs({\n        TX_USER_EMAIL: localStorage.username,\n        TX_USER_PASSWORD: localStorage.password\n      });\n    }\n  }, []);\n\n  var onChangeOfForm = function onChangeOfForm(e) {\n    setErrorLoginMessage('');\n    setErrorSignUpMessage('');\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmitStudentSignUpForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, response, parseRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              body = {\n                TX_USER_NAME: TX_USER_NAME,\n                TX_USER_EMAIL: TX_USER_EMAIL,\n                TX_USER_PASSWORD: TX_USER_PASSWORD\n              };\n              console.log(body);\n              _context.next = 6;\n              return fetch(\"http://localhost:5000/auth/counsellor/register\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              parseRes = _context.sent;\n              console.log(\"registration data\", parseRes);\n\n              if (!parseRes.jwtToken) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 14;\n              return localStorage.setItem(\"jwtToken\", parseRes.jwtToken);\n\n            case 14:\n              _context.next = 16;\n              return localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor);\n\n            case 16:\n              _context.next = 18;\n              return localStorage.setItem(\"userID\", parseRes.userID);\n\n            case 18:\n              setAuth(true);\n              toast.success('login successful!', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: true,\n                progress: ''\n              }); // toast.success(\"login successfully!\")\n\n              _context.next = 25;\n              break;\n\n            case 22:\n              setErrorSignUpMessage(parseRes);\n              setAuth(false);\n              setCount(false);\n\n            case 25:\n              _context.next = 30;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.message);\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 27]]);\n    }));\n\n    return function onSubmitStudentSignUpForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var setHeightofScreen = function setHeightofScreen() {\n      return setHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', setHeightofScreen);\n    return function () {\n      window.removeEventListener('resize', setHeightofScreen);\n    };\n  });\n\n  var StudentSignUp = function StudentSignUp() {\n    setModalLogin(false);\n    setModalStudentSignUp(true);\n  };\n\n  var CounsellorSignUp = function CounsellorSignUp() {\n    setModalLogin(false);\n    setModalConsellorTypeSingup(true);\n  };\n\n  var close = function close() {\n    setOpen(false);\n    props.onCloseModal();\n  };\n\n  var _handleGoogleSignInClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              window.open(\"http://localhost:5000/socialAuth/google/1\", \"_self\");\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function _handleGoogleSignInClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  console.log(rememberMe);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    color: \"black\",\n    textAlign: \"center\",\n    style: {\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, \"Sign up for counsellor\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    divided: true,\n    relaxed: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    onClick: _handleGoogleSignInClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"google\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 53\n    }\n  }), \" Sign up with Google \\xA0\\xA0\"), \" \\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Form, {\n    size: \"small\",\n    onSubmit: onSubmitStudentSignUpForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your Name\",\n    type: \"text\",\n    name: \"TX_USER_NAME\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_NAME,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your Email Id\",\n    type: \"text\",\n    name: \"TX_USER_EMAIL\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_EMAIL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter password\",\n    type: \"password\",\n    name: \"TX_USER_PASSWORD\",\n    onChange: function onChange(e) {\n      return onChangeOfForm(e);\n    },\n    value: TX_USER_PASSWORD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 57\n    }\n  }))), errorSignUpMessage && /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    style: {\n      padding: '0.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 57\n    }\n  }, errorSignUpMessage))), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, \"Sign up\"))));\n};\n\nexport default Counsellor_Registration;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/_Counsellor_Registration.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Checkbox","Divider","List","Label","Authorize","axios","ToastContainer","toast","googleLogin","Counsellor_Registration","props","open","setOpen","window","innerWidth","defHeight","setHeight","ModalLogin","setModalLogin","ModalConsellorTypeSingup","setModalConsellorTypeSingup","ModalStudentSignUp","setModalStudentSignUp","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","inputs","setInputs","errorLoginMessage","setErrorLoginMessage","errorSignUpMessage","setErrorSignUpMessage","rememberMe","setRememberMe","setAuth","setCount","localStorage","checkbox","username","password","onChangeOfForm","e","target","name","value","onSubmitStudentSignUpForm","preventDefault","body","console","log","fetch","method","headers","JSON","stringify","response","json","parseRes","jwtToken","setItem","isCounsellor","userID","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","message","setHeightofScreen","innerHeight","addEventListener","removeEventListener","StudentSignUp","CounsellorSignUp","close","onCloseModal","_handleGoogleSignInClick","maxWidth","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Header, Icon, Form, Image, Message,\r\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Checkbox, Divider, List, Label\r\n} from 'semantic-ui-react'; \r\nimport { Authorize } from \"../../MainComponents/DesktopComponent\";\r\nimport axios from '../../Store/_AxiosInstance';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport googleLogin from \"google-auth-library\"\r\n\r\nconst Counsellor_Registration = props => {\r\n    const [open, setOpen] = useState(true);\r\n    const [defHeight, setHeight] = useState(window.innerWidth);\r\n    const [ModalLogin, setModalLogin] = useState(true);\r\n    const [ModalConsellorTypeSingup, setModalConsellorTypeSingup] = useState(false);\r\n    const [ModalStudentSignUp, setModalStudentSignUp] = useState(false);\r\n    const [inputs, setInputs] = useState({\r\n        TX_USER_NAME: \"\",\r\n        TX_USER_EMAIL: \"\",\r\n        TX_USER_PASSWORD: \"\",\r\n        // USER_CONFIRM_PASSWORD:\"\"\r\n    });\r\n    const [errorLoginMessage, setErrorLoginMessage] = useState('');\r\n    const [errorSignUpMessage, setErrorSignUpMessage] = useState('');\r\n    const [rememberMe, setRememberMe] = useState();\r\n\r\n    const { TX_USER_NAME, TX_USER_EMAIL, TX_USER_PASSWORD } = inputs;\r\n    const setAuth = useContext(Authorize);\r\nconst setCount = useContext(Authorize);\r\n    useEffect(() => {\r\n        if (localStorage.checkbox && localStorage.username !== \"\") {\r\n            setRememberMe(localStorage.checkbox);\r\n            setInputs({\r\n                TX_USER_EMAIL: localStorage.username,\r\n                TX_USER_PASSWORD: localStorage.password\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const onChangeOfForm = (e) => {\r\n        setErrorLoginMessage('');\r\n        setErrorSignUpMessage('');\r\n        setInputs({ ...inputs, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const onSubmitStudentSignUpForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = { TX_USER_NAME, TX_USER_EMAIL, TX_USER_PASSWORD };\r\n            console.log(body);\r\n\r\n            const response = await fetch(\"http://localhost:5000/auth/counsellor/register\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n \r\n\r\n\r\n            const parseRes = await response.json();\r\n            \r\n\r\n\r\n            \r\n            console.log(\"registration data\", parseRes);\r\n\r\n            if (parseRes.jwtToken) { \r\n              await  localStorage.setItem(\"jwtToken\", parseRes.jwtToken);\r\n              await    localStorage.setItem(\"isCounsellor\", parseRes.isCounsellor);\r\n              await    localStorage.setItem(\"userID\", parseRes.userID);  \r\n\r\n                setAuth(true);\r\n                toast.success('login successful!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: '',\r\n                });\r\n                \r\n\r\n             \r\n\r\n\r\n\r\n                \r\n                // toast.success(\"login successfully!\")\r\n            }\r\n            else {\r\n                setErrorSignUpMessage(parseRes);\r\n                setAuth(false);\r\n                setCount(false);\r\n                \r\n            } \r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n \r\n    useEffect(() => {\r\n        const setHeightofScreen = () => setHeight(window.innerHeight)\r\n        window.addEventListener('resize', setHeightofScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setHeightofScreen)\r\n        }\r\n    })\r\n\r\n    const StudentSignUp = () => {\r\n        setModalLogin(false)\r\n        setModalStudentSignUp(true)\r\n    }\r\n    const CounsellorSignUp = () => {\r\n        setModalLogin(false)\r\n        setModalConsellorTypeSingup(true)\r\n    }\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n        props.onCloseModal();\r\n    }\r\n\r\n    const _handleGoogleSignInClick = async () => {\r\n        window.open(\"http://localhost:5000/socialAuth/google/1\", \"_self\");\r\n    }\r\n\r\n    console.log(rememberMe);\r\n\r\n    return (\r\n        <React.Fragment>\r\n           <Grid textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column style={{ maxWidth: 450 }}>\r\n                                    <Header as='h2' color='black' textAlign='center' style={{ padding: \"10px\" }}>\r\n                                        Sign up for counsellor \r\n                            </Header>\r\n                                    <Form size='large' >\r\n                                        <List divided relaxed>\r\n                                            \r\n                                            <List.Item>\r\n                                                <Button color='red' onClick={_handleGoogleSignInClick}>\r\n                                                    <Icon name='google' /> Sign up with Google &nbsp;&nbsp;\r\n                                    </Button> &nbsp;&nbsp;&nbsp;\r\n                                  \r\n                                            </List.Item>\r\n                                        </List>\r\n                                    </Form>\r\n                                    <br /> \r\n \r\n                                </Grid.Column>\r\n                            </Grid>\r\n  <Form size='small' onSubmit={onSubmitStudentSignUpForm}>\r\n                                        <Segment stacked>\r\n                                            <Form.Group widths='equal'>\r\n\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter your Name'\r\n                                                        type='text'\r\n                                                        name=\"TX_USER_NAME\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_NAME}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter your Email Id'\r\n                                                        type='text'\r\n                                                        name=\"TX_USER_EMAIL\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_EMAIL}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            <Form.Group widths='equal'>\r\n                                                <Form.Field className=\"CustomForm\">\r\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                        <input\r\n                                                        placeholder='Enter password'\r\n                                                        type='password'\r\n                                                        name=\"TX_USER_PASSWORD\"\r\n                                                        onChange={e => onChangeOfForm(e)}\r\n                                                        value={TX_USER_PASSWORD}\r\n                                                    />\r\n                                                </Form.Field>\r\n                                            </Form.Group>\r\n                                            {errorSignUpMessage && (\r\n                                                <Form.Group widths='equal'>\r\n                                                    <Form.Field className=\"CustomForm\">\r\n                                                        <Message negative style={{ padding: '0.5rem' }}>\r\n                                                            {errorSignUpMessage}\r\n                                                        </Message>\r\n                                                    </Form.Field>\r\n                                                </Form.Group>\r\n                                            )\r\n                                            }\r\n                                    \r\n                                            <Button color='teal' fluid size='large'>\r\n                                                Sign up\r\n                                            </Button>\r\n                                        </Segment>\r\n                                    </Form>\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default Counsellor_Registration;"]},"metadata":{},"sourceType":"module"}