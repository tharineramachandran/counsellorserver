{"ast":null,"code":"var arrayPush = require('./_arrayPush'),\n    baseFlatten = require('./_baseFlatten'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray');\n/**\r\n * Creates a new array concatenating `array` with any additional arrays\r\n * and/or values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to concatenate.\r\n * @param {...*} [values] The values to concatenate.\r\n * @returns {Array} Returns the new concatenated array.\r\n * @example\r\n *\r\n * var array = [1];\r\n * var other = _.concat(array, 2, [3], [[4]]);\r\n *\r\n * console.log(other);\r\n * // => [1, 2, 3, [4]]\r\n *\r\n * console.log(array);\r\n * // => [1]\r\n */\n\n\nfunction concat() {\n  var length = arguments.length;\n\n  if (!length) {\n    return [];\n  }\n\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nmodule.exports = concat;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/node_modules/lodash/concat.js"],"names":["arrayPush","require","baseFlatten","copyArray","isArray","concat","length","arguments","args","Array","array","index","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CADzB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,cAAD,CAFvB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAHrB;AAKA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASI,MAAT,GAAkB;AAChB,MAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAIE,IAAI,GAAGC,KAAK,CAACH,MAAM,GAAG,CAAV,CAAhB;AAAA,MACII,KAAK,GAAGH,SAAS,CAAC,CAAD,CADrB;AAAA,MAEII,KAAK,GAAGL,MAFZ;;AAIA,SAAOK,KAAK,EAAZ,EAAgB;AACdH,IAAAA,IAAI,CAACG,KAAK,GAAG,CAAT,CAAJ,GAAkBJ,SAAS,CAACI,KAAD,CAA3B;AACD;;AACD,SAAOX,SAAS,CAACI,OAAO,CAACM,KAAD,CAAP,GAAiBP,SAAS,CAACO,KAAD,CAA1B,GAAoC,CAACA,KAAD,CAArC,EAA8CR,WAAW,CAACM,IAAD,EAAO,CAAP,CAAzD,CAAhB;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBR,MAAjB","sourcesContent":["var arrayPush = require('./_arrayPush'),\r\n    baseFlatten = require('./_baseFlatten'),\r\n    copyArray = require('./_copyArray'),\r\n    isArray = require('./isArray');\r\n\r\n/**\r\n * Creates a new array concatenating `array` with any additional arrays\r\n * and/or values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to concatenate.\r\n * @param {...*} [values] The values to concatenate.\r\n * @returns {Array} Returns the new concatenated array.\r\n * @example\r\n *\r\n * var array = [1];\r\n * var other = _.concat(array, 2, [3], [[4]]);\r\n *\r\n * console.log(other);\r\n * // => [1, 2, 3, [4]]\r\n *\r\n * console.log(array);\r\n * // => [1]\r\n */\r\nfunction concat() {\r\n  var length = arguments.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  var args = Array(length - 1),\r\n      array = arguments[0],\r\n      index = length;\r\n\r\n  while (index--) {\r\n    args[index - 1] = arguments[index];\r\n  }\r\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\r\n}\r\n\r\nmodule.exports = concat;\r\n"]},"metadata":{},"sourceType":"script"}