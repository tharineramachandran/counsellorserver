{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\UserDashboard\\\\layout\\\\ViewUserAccepted.js\";\nimport React from 'react';\nimport { Button, Form, Header, Image, Input, Dropdown, Grid, Modal, Message, Segment, Card, Img, Icon, Table, Label, Container, List, Popup } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport ChangeSession from \"./UserRequestChangeSessionModel\";\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // import FullCalendar from '@fullcalendar/react'\n// import interactionPlugin from '@fullcalendar/interaction'\n// import timeGridPlugin from ' ullcalendar/timegrid'\n\nvar axios = require('axios');\n\nvar ViewAccepted = /*#__PURE__*/function (_React$Component) {\n  _inherits(ViewAccepted, _React$Component);\n\n  var _super = _createSuper(ViewAccepted);\n\n  function ViewAccepted() {\n    var _this;\n\n    _classCallCheck(this, ViewAccepted);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      requests: [],\n      openModel: false,\n      element: {}\n    };\n\n    _this.setTable = function () {\n      axios.get('http://localhost:5000/session/user/accepted/' + localStorage.userID, {\n        headers: {\n          jwtToken: localStorage.jwtToken\n        },\n        data: {\n          userID: localStorage.userID\n        }\n      }).then(function (res) {\n        var requests = res.data;\n        var display = [];\n        requests.forEach(function (element) {\n          // var datestr = element.ct_session_start_time.split(\"T\");\n          // var datestrdate = datestr[0].split(\"-\");\n          // var datestr3 = datestr[1].split(\":\");\n          // var enddatestr = element.ct_session_end_time.split(\"T\");\n          // var enddatestr3 = enddatestr[1].split(\":\");\n          // var day = (parseInt(datestrdate[2])).toString();\n          // element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\n          // element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\n          // element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\n          var strsa = element.ct_session_start_time;\n          var st = strsa.split('T');\n          var stDF = st[1].split(':');\n          var str = st[0] + \"T\" + stDF[0] + \":\" + stDF[1] + \":00\";\n          var startdate = new Date(str);\n          var endstrsa = element.ct_session_end_time;\n          var endst = endstrsa.split('T');\n          var endstDF = endst[1].split(':');\n          var endstr = endst[0] + \"T\" + endstDF[0] + \":\" + endstDF[1] + \":00\";\n          var enddate = new Date(endstr);\n          var eventdatestart = startdate;\n          var eventdateend = enddate;\n          var datestr = element.ct_session_start_time.split(\"T\");\n          var datestrdate = datestr[0].split(\"-\");\n          var datestr3 = datestr[1].split(\":\");\n          var enddatestr = element.ct_session_end_time.split(\"T\");\n          var enddatestr3 = enddatestr[1].split(\":\");\n          var day = parseInt(datestrdate[2]).toString();\n          element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\n          element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\n          element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\n          var obj = {\n            title: 'Counselling Session',\n            start: str,\n            end: endstr,\n            extendedProps: {\n              element: element\n            }\n          };\n          display.push(obj);\n        });\n        var openModel = false;\n\n        _this.setState({\n          requests: display,\n          openModel: openModel\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.acceptRequest = function (requestID, response) {\n      console.log(requestID);\n      console.log(response);\n      var data = {\n        requestID: requestID,\n        response: response,\n        counsellorID: localStorage.userID\n      };\n      var options = {\n        headers: {\n          jwtToken: localStorage.jwtToken\n        }\n      };\n      axios.get('http://localhost:5000/request/google/get', {\n        params: {\n          requestID: requestID,\n          response: response,\n          counsellorID: localStorage.userID\n        }\n      }).then(function (res) {\n        if (res.status == 200) {\n          toast.success('Request accepted successfully!', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: ''\n          });\n\n          _this.setTable();\n        } else {\n          toast.error(res.data.message, {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: ''\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleEventClick = function (_ref) {\n      var event = _ref.event;\n      // openAppointment is a function I wrote to open a form to edit that appointment\n      console.log(event); // window.open(event._def.extendedProps.url);\n\n      console.log(event);\n\n      _this.setState({\n        openModel: true,\n        element: event._def.extendedProps.element\n      });\n    };\n\n    _this.openGoogleMeet = function (url) {\n      window.open(url);\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewAccepted, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        columns: \"equal\",\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FullCalendar, {\n        nowIndicator: true,\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        initialView: \"dayGridMonth\",\n        events: this.state.requests,\n        eventClick: this.handleEventClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        onClose: function onClose() {\n          return _this2.setState({\n            openModel: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this2.setState({\n            openModel: true\n          });\n        },\n        open: this.state.openModel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 57\n        }\n      }, \"Session Details \"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 57\n        }\n      }, \"Counsellor Username  : \", this.state.element.TX_USER_NAME, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 109\n        }\n      }), \"Counsellor  Email : \", this.state.element.TX_USER_EMAIL, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 107\n        }\n      }), \"Session Date  : \", this.state.element.ct_session_date, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 103\n        }\n      }), \"Session Start Time  : \", this.state.element.ct_session_start_time, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 114\n        }\n      }), \"Session End Time  : \", this.state.element.ct_session_end_time, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 111\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          return window.open(_this2.state.element.ct_meeting_url);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 49\n        }\n      }, \" Google Meet Link\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: function onClick() {\n          return _this2.setState({\n            openModel: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 61\n        }\n      }, \"Close\"))))));\n    }\n  }]);\n\n  return ViewAccepted;\n}(React.Component);\n\nexport default ViewAccepted;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/UserDashboard/layout/ViewUserAccepted.js"],"names":["React","Button","Form","Header","Image","Input","Dropdown","Grid","Modal","Message","Segment","Card","Img","Icon","Table","Label","Container","List","Popup","ToastContainer","toast","ChangeSession","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","axios","require","ViewAccepted","state","requests","openModel","element","setTable","get","localStorage","userID","headers","jwtToken","data","then","res","display","forEach","strsa","ct_session_start_time","st","split","stDF","str","startdate","Date","endstrsa","ct_session_end_time","endst","endstDF","endstr","enddate","eventdatestart","eventdateend","datestr","datestrdate","datestr3","enddatestr","enddatestr3","day","parseInt","toString","ct_session_date","obj","title","start","end","extendedProps","push","setState","catch","error","console","log","acceptRequest","requestID","response","counsellorID","options","params","status","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","message","handleEventClick","event","_def","openGoogleMeet","url","window","open","left","center","right","TX_USER_NAME","TX_USER_EMAIL","ct_meeting_url","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Form, Header, Image, Input,\r\n    Dropdown, Grid, Modal,\r\n    Message, Segment, Card, Img, Icon,\r\n    Table, Label, Container, List, Popup\r\n} from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ChangeSession from \"./UserRequestChangeSessionModel\"\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n// import FullCalendar from '@fullcalendar/react'\r\n// import interactionPlugin from '@fullcalendar/interaction'\r\n// import timeGridPlugin from ' ullcalendar/timegrid'\r\n \r\nconst axios = require('axios'); \r\n\r\n\r\nclass ViewAccepted extends React.Component {\r\n    state = {\r\n        requests: [],\r\n        openModel: false,\r\n        element : {}\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.setTable();\r\n    }\r\n    setTable = ( ) => {\r\n        axios.get('http://localhost:5000/session/user/accepted/'+localStorage.userID, {\r\n            headers: {\r\n                jwtToken: localStorage.jwtToken\r\n            },\r\n            data: {\r\n                userID: localStorage.userID\r\n\r\n            }\r\n        })\r\n            .then((res) => {\r\n                const requests = res.data;\r\n                var display = [];\r\n\r\n                requests.forEach(element => {\r\n\r\n                    // var datestr = element.ct_session_start_time.split(\"T\");\r\n\r\n                    // var datestrdate = datestr[0].split(\"-\");\r\n                    // var datestr3 = datestr[1].split(\":\");\r\n\r\n                    // var enddatestr = element.ct_session_end_time.split(\"T\");\r\n\r\n                    // var enddatestr3 = enddatestr[1].split(\":\");\r\n                    // var day = (parseInt(datestrdate[2])).toString();\r\n\r\n                    // element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\r\n                    // element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\r\n                    // element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\r\n\r\n          \r\n                    let strsa = element.ct_session_start_time;\r\n                    var st = strsa.split('T');\r\n                    var stDF = st[1].split(':');\r\n                    let str = st[0]+\"T\"  +stDF[0]     +\":\"  +stDF[1]      +\":00\"               ;\r\n                 \r\n                    let startdate = new Date(str  ); \r\n                     \r\n                    let endstrsa = element.ct_session_end_time;\r\n                    var endst = endstrsa.split('T');\r\n                    var endstDF = endst[1].split(':');\r\n                    let endstr = endst[0]+\"T\"  +endstDF[0]     +\":\"  +endstDF[1]      +\":00\"               ;\r\n                 \r\n                    let enddate = new Date(endstr  ); \r\n\r\n\r\n                    var eventdatestart = startdate;  \r\n\r\n                    var eventdateend =  enddate   ;   \r\n                    var datestr = element.ct_session_start_time.split(\"T\");\r\n\r\n                    var datestrdate = datestr[0].split(\"-\");\r\n                    var datestr3 = datestr[1].split(\":\");\r\n\r\n                    var enddatestr = element.ct_session_end_time.split(\"T\");\r\n\r\n                    var enddatestr3 = enddatestr[1].split(\":\");\r\n                    var day = (parseInt(datestrdate[2])).toString();\r\n\r\n                    element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\r\n                    element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\r\n                    element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\r\n                    var obj = {title: 'Counselling Session', start :  str ,end :endstr,\r\n                 \r\n                    extendedProps: {  element: element     }};\r\n                     \r\n                    display.push(obj);\r\n                });\r\n              \r\n                const openModel = false;\r\n                this.setState({ requests : display, openModel :openModel });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    acceptRequest = (requestID, response) => {\r\n        console.log(requestID);\r\n        console.log(response);\r\n        var data = {\r\n            requestID: requestID,\r\n            response: response,\r\n            counsellorID: localStorage.userID\r\n        };\r\n\r\n        var options = {\r\n            headers: {\r\n                jwtToken: localStorage.jwtToken,\r\n            }\r\n        };\r\n        axios.get('http://localhost:5000/request/google/get',\r\n            {\r\n                params: {\r\n                    requestID: requestID,\r\n                    response: response,\r\n                    counsellorID: localStorage.userID\r\n                }\r\n            })\r\n            .then((res) => {\r\n\r\n                if (res.status == 200) {\r\n                    toast.success('Request accepted successfully!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: false,\r\n                        draggable: true,\r\n                        progress: '',\r\n                    });\r\n\r\n                    this.setTable();\r\n                }\r\n                else {\r\n                    toast.error(res.data.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: false,\r\n                        draggable: true,\r\n                        progress: '',\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n    handleEventClick= ({event}) => {\r\n        // openAppointment is a function I wrote to open a form to edit that appointment\r\n        console.log(event);\r\n        // window.open(event._def.extendedProps.url);\r\n        console.log(event);\r\n         \r\n\r\n\r\n        this.setState({ openModel: true , element : event._def.extendedProps.element })\r\n\r\n\r\n    }\r\n    openGoogleMeet= (url) => {\r\n        window.open( url);\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid columns='equal' divided>\r\n\r\n                <Grid.Row textAlign='center'>\r\n                    <Grid.Column>\r\n                   \r\n                    <FullCalendar\r\n     \r\n    nowIndicator={true}\r\n    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n    headerToolbar={{\r\n      left: 'prev,next today',\r\n      center: 'title',\r\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n    }}\r\n    initialView='dayGridMonth'\r\n    events={ this.state.requests}\r\n    eventClick={this.handleEventClick}\r\n\r\n  />\r\n\r\n\r\n\r\n<Modal\r\n                                                        onClose={() => this.setState({ openModel: false })}\r\n                                                        onOpen={() => this.setState({ openModel: true })}\r\n                                                        open={this.state.openModel}\r\n                                                      \r\n                                                    >\r\n                                                        <Modal.Header>Session Details </Modal.Header>\r\n                                                        <Modal.Content  >\r\n\r\n                                                  Counsellor Username  : {this.state.element.TX_USER_NAME}  <br/>\r\n                                                  Counsellor  Email : {this.state.element.TX_USER_EMAIL}  <br/>\r\n                                                Session Date  : {this.state.element.ct_session_date}  <br/>\r\n                                                Session Start Time  : {this.state.element.ct_session_start_time} <br/> \r\n                                                Session End Time  : {this.state.element.ct_session_end_time}  <br/>\r\n                                                <Button color='teal'\r\n                                                 onClick={() => window.open(this.state.element.ct_meeting_url)}\r\n                                                 > Google Meet Link\r\n                                                 </Button> \r\n                                                        </Modal.Content>\r\n                                                        <Modal.Actions>\r\n                                                            <Button color='black' onClick={() => this.setState({ openModel: false })}>\r\n                                                                Close\r\n                                                                </Button>\r\n                                                        </Modal.Actions>\r\n                                                    </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n\r\n                        <Container>\r\n                            <h1>Requests for sessions</h1>\r\n                            <Table basic='very' celled collapsing>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>Session ID </Table.HeaderCell>\r\n\r\n                                        <Table.HeaderCell>Counsellee Name </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Counsellee Email </Table.HeaderCell>\r\n\r\n                                        <Table.HeaderCell>Session Date </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Start Time </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session End Time </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Time Zone </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Options</Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    {this.state.requests.length > 0 ? (\r\n                                        this.state.requests.map((details, index) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    {details.url}\r\n                                                </Table.Cell>\r\n\r\n{/*                                                 \r\n                                                <Table.Cell>\r\n                                                    {details.TX_USER_NAME}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.TX_USER_EMAIL}\r\n                                                </Table.Cell>\r\n\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_date}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_start_time}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_end_time}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_counsellor_timezone_code}\r\n                                                </Table.Cell> */}\r\n                                                {/* <Table.Cell>\r\n                                                <button   class=\"ui positive button\"   onClick={() => this.acceptRequest(details.id, 1)}><Icon name='check' /> Accept </button>\r\n \r\n                                                </Table.Cell>    <Table.Cell>\r\n                                                <button class=\"ui negative button\"  onClick={() => this.acceptRequest(details.id, 0)} ><Icon name='close' /> Decline </button>\r\n                                                   \r\n                                                </Table.Cell>    */}\r\n                                               \r\n \r\n\r\n                                                {/* <Table.Cell>\r\n                                                  \r\n                                                    <Modal\r\n                                                        onClose={() => this.setState({ openModel: false })}\r\n                                                        onOpen={() => this.setState({ openModel: true })}\r\n                                                        open={this.state.openModel}\r\n                                                        trigger={<Button  class=\"ui button\"         color='yellow' ><Icon name='edit ' /> Change Session Timing  </Button>}\r\n                                                    >\r\n                                                        <Modal.Header>Request Session Change</Modal.Header>\r\n                                                        <Modal.Content  >\r\n                                                            <ChangeSession\r\n                                                                CounsellorID={details.ct_counsellor_id}\r\n                                                                RequestID={details.id}\r\n                                                                UserID={localStorage.userID}\r\n                                                            />\r\n                                                        </Modal.Content>\r\n                                                        <Modal.Actions>\r\n                                                            <Button color='black' onClick={() => this.setState({ openModel: false })}>\r\n                                                                Close\r\n                                                                </Button>\r\n                                                        </Modal.Actions>\r\n                                                    </Modal>\r\n                                                </Table.Cell> */}\r\n\r\n                                            {/* </Table.Row>))\r\n                                    ) :\r\n                                        (\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    No requests found for you today\r\n                                        </Table.Cell>\r\n                                            </Table.Row>\r\n                                        )\r\n                                    }\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </Container>  */}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewAccepted; "]},"metadata":{},"sourceType":"module"}