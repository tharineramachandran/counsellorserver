{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ACTIVANTS\\\\Desktop\\\\LMS Councellor\\\\Activants_LMS_Counsellor\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\RegistrationComponents\\\\_Registration_First.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Header, Icon, Form, Image, Message, Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select } from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport _AxiosInstance from '../../../Store/_AxiosInstance';\n\nvar Registration_First = function Registration_First(_ref) {\n  var formData = _ref.formData,\n      setForm = _ref.setForm,\n      navigation = _ref.navigation,\n      step = _ref.step;\n  var COUNSELLOR_FIRST_NAME = formData.COUNSELLOR_FIRST_NAME,\n      COUNSELLOR_LAST_NAME = formData.COUNSELLOR_LAST_NAME,\n      COUNSELLOR_EMAIL = formData.COUNSELLOR_EMAIL,\n      COUNSELLOR_PHONE_NUMBER = formData.COUNSELLOR_PHONE_NUMBER,\n      COUNSELLOR_COUNTRY_CODE = formData.COUNSELLOR_COUNTRY_CODE,\n      COUNSELLOR_COUNSELLING_SUBJECT_CODE = formData.COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n      COUNSELLOR_COUNSELLING_LEVEL_CODE = formData.COUNSELLOR_COUNSELLING_LEVEL_CODE,\n      COUNSELLOR_HOURLY_RATE = formData.COUNSELLOR_HOURLY_RATE,\n      COUNSELLOR_QUALIFICATION_INSTITUTE = formData.COUNSELLOR_QUALIFICATION_INSTITUTE;\n  console.log(formData);\n\n  var _useState = useState('circle'),\n      _useState2 = _slicedToArray(_useState, 2),\n      icon_name = _useState2[0],\n      setIcon_name = _useState2[1];\n\n  var _useForm = useForm({}),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      WS_Countries = _useState4[0],\n      setWS_Countries = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      WS_Institutes = _useState6[0],\n      setWS_Institutes = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      WS_Qualifications = _useState8[0],\n      setWS_Qualifications = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      WS_Counselling_Subjects = _useState10[0],\n      setWS_Counselling_Subjects = _useState10[1];\n\n  var _useState11 = useState([{\n    CT_QUALIFICATION_CODE: \"\",\n    CT_INSTITUTE_CODE: \"\"\n  }]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputList = _useState12[0],\n      setInputList = _useState12[1];\n\n  useEffect(function () {\n    _AxiosInstance.get('Selectlist').then(function (res) {\n      console.log(res.data);\n      var countries = res.data['COUNTRIES'];\n      var institutes = res.data['INSTITUTES'];\n      var qualifications = res.data['QUALIFICATIONS'];\n      var counselling_subjects = res.data['COUNSELLING_SUBJECTS'];\n      setWS_Countries(countries);\n      setWS_Institutes(institutes);\n      setWS_Qualifications(qualifications);\n    }).catch(function (err) {});\n\n    return function () {\n      console.log(\"cleaned up state...\");\n      setWS_Countries({});\n      setWS_Qualifications({});\n      setWS_Institutes({});\n      console.log(WS_Countries);\n    };\n  }, []);\n\n  var addQualification = function addQualification() {};\n\n  var countriesList = WS_Countries.length > 0 && WS_Countries.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_COUNTRY_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, item.CT_COUNTRY_NAME));\n  }, _this);\n  var qualificationsList = WS_Qualifications.length > 0 && WS_Qualifications.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_QUALIFICATION_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, item.CT_QUALIFICATION_NAME));\n  }, _this);\n  var instituteList = WS_Institutes.length > 0 && WS_Institutes.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      key: item.ID,\n      value: item.CT_INSTITUTE_CODE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, item.CT_INSTITUTE_NAME));\n  }, _this);\n\n  var onSubmit = function onSubmit(data) {\n    navigation.next();\n  };\n\n  useEffect(function () {\n    var e = {\n      target: {\n        name: \"COUNSELLOR_QUALIFICATION_INSTITUTE\",\n        value: inputList\n      }\n    };\n    setForm(e);\n  }, [inputList]);\n  var Counsellor_Countries = [{\n    title: \"What kind of traveler are you?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Subject = [{\n    title: \"Choose subject?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counselling_Level = [{\n    title: \"Choose Level?\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Qualification = [{\n    title: \"Choose Qualification\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  var Counsellor_Institute = [{\n    title: \"Choose Institute\",\n    name: [\"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"],\n    code: [0, 1, 2, 3]\n  }];\n  useEffect(function () {\n    if (step.id == 'Counsellor_details') setIcon_name('circle');else setIcon_name('circle outline');\n  }, []);\n  useEffect(function () {\n    if (COUNSELLOR_QUALIFICATION_INSTITUTE.length > 0) {\n      console.log(\"****************\", COUNSELLOR_QUALIFICATION_INSTITUTE);\n      console.log(\"&&&&&&&&&&&&&&&&&&&&&&&\", formData.COUNSELLOR_QUALIFICATION_INSTITUTE);\n      setInputList(COUNSELLOR_QUALIFICATION_INSTITUTE);\n    }\n  }, []); // handle input change\n\n  var handleInputChange = function handleInputChange(e, index) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    var list = _toConsumableArray(inputList);\n\n    list[index][name] = value;\n    setInputList(list);\n  }; // handle click event of the Remove button\n\n\n  var handleRemoveClick = function handleRemoveClick(index) {\n    var list = _toConsumableArray(inputList);\n\n    list.splice(index, 1);\n    setInputList(list);\n  }; // handle click event of the Add button\n\n\n  var handleAddClick = function handleAddClick() {\n    setInputList([].concat(_toConsumableArray(inputList), [{\n      CT_QUALIFICATION_CODE: \"\",\n      CT_INSTITUTE_CODE: \"\"\n    }]));\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    inverted: true,\n    color: \"teal\",\n    size: \"mini\",\n    style: {\n      width: '85%',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left',\n      marginLeft: '2rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, \"Registation for Counsellor\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right',\n      padding: '1rem;'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    onClick: function onClick() {\n      return navigation.next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"hand point right outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 45\n    }\n  }), \"Next\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      padding: '1rem 2rem',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: icon_name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 53\n    }\n  }), \"Personal Details\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 53\n    }\n  }), \"Profile Photo\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 53\n    }\n  }), \"Description\\xA0\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    className: \"activeBreadCrumb\",\n    circular: true,\n    onClick: function onClick() {\n      return navigation.go(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 53\n    }\n  }), \"Video\\xA0\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      width: '95%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 53\n    }\n  }, \"Personal Details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_FIRST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_FIRST_NAME // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_FIRST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 90\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"COUNSELLOR_LAST_NAME\",\n    onChange: setForm,\n    value: COUNSELLOR_LAST_NAME // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_LAST_NAME && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 89\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"mail\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    iconPosition: \"left\",\n    placeholder: \"Email\",\n    type: \"text\",\n    name: \"COUNSELLOR_EMAIL\",\n    onChange: setForm,\n    value: COUNSELLOR_EMAIL // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }), errors.COUNSELLOR_EMAIL && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 85\n    }\n  }, \"Username invalid\")), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"phone\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    placeholder: \"Phone number\",\n    type: \"text\",\n    name: \"COUNSELLOR_PHONE_NUMBER\",\n    onChange: setForm,\n    value: COUNSELLOR_PHONE_NUMBER // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 57\n    }\n  }), errors.COUNSELLOR_PHONE_NUMBER && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"customError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 92\n    }\n  }, \"Username invalid\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"world\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 57\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"\",\n    name: \"COUNSELLOR_COUNTRY_CODE\",\n    value: COUNSELLOR_COUNTRY_CODE,\n    onChange: setForm,\n    placeholder: \"select your country\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 61\n    }\n  }, \"Select your country\"), countriesList)), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 53\n    }\n  }, \"Educational details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 49\n    }\n  }), inputList.map(function (x, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"graduation\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 65\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_QUALIFICATION_CODE\",\n      value: x.CT_QUALIFICATION_CODE,\n      onChange: function onChange(e) {\n        return handleInputChange(e, i);\n      },\n      placeholder: \"select your Qualification\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 69\n      }\n    }, \"Select Your Qualification\"), qualificationsList)), /*#__PURE__*/React.createElement(Form.Field, {\n      className: \"CustomForm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"university\",\n      className: \"customIconsAlign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 65\n      }\n    }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"CT_INSTITUTE_CODE\",\n      value: x.CT_INSTITUTE_CODE,\n      onChange: function onChange(e) {\n        return handleInputChange(e, i);\n      },\n      placeholder: \"select your Institute\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 69\n      }\n    }, \"Select your institute\"), instituteList))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left',\n        width: '84%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 61\n      }\n    }, inputList.length !== 1 && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: function onClick() {\n        return handleRemoveClick(i);\n      },\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"red\",\n      name: \"remove\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 73\n      }\n    })), inputList.length - 1 === i && /*#__PURE__*/React.createElement(Label, {\n      as: \"a\",\n      onClick: handleAddClick,\n      circular: true,\n      style: {\n        marginRight: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"green\",\n      name: \"plus\",\n      style: {\n        margin: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 73\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    color: \"blue\",\n    ribbon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 49\n    }\n  }, \"Counselling details\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_SUBJECT_CODE\",\n    value: COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 37\n    }\n  }, Counsellor_Subject.map(function (subjects) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 73\n      }\n    }, subjects.title), subjects.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 111\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"COUNSELLOR_COUNSELLING_LEVEL_CODE\",\n    value: COUNSELLOR_COUNSELLING_LEVEL_CODE,\n    onChange: setForm,\n    placeholder: \"choose subject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 37\n    }\n  }, Counselling_Level.map(function (level) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 73\n      }\n    }, level.title), level.name.map(function (name, code) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 108\n        }\n      }, name);\n    }));\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    className: \"CustomForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    className: \"customIconsAlign\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 53\n    }\n  }), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Enter your details\",\n    type: \"text\",\n    name: \"COUNSELLOR_HOURLY_RATE\",\n    onChange: setForm,\n    value: COUNSELLOR_HOURLY_RATE,\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  }), \"$\"))))))))))));\n};\n\nexport default Registration_First;","map":{"version":3,"sources":["C:/Users/ACTIVANTS/Desktop/LMS Councellor/Activants_LMS_Counsellor/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/RegistrationComponents/_Registration_First.js"],"names":["React","useState","useEffect","useContext","Header","Icon","Form","Image","Message","Segment","Grid","Modal","Search","Button","Dimmer","Loader","Label","Container","Breadcrumb","Divider","Popup","List","Dropdown","Select","useForm","_AxiosInstance","Registration_First","formData","setForm","navigation","step","COUNSELLOR_FIRST_NAME","COUNSELLOR_LAST_NAME","COUNSELLOR_EMAIL","COUNSELLOR_PHONE_NUMBER","COUNSELLOR_COUNTRY_CODE","COUNSELLOR_COUNSELLING_SUBJECT_CODE","COUNSELLOR_COUNSELLING_LEVEL_CODE","COUNSELLOR_HOURLY_RATE","COUNSELLOR_QUALIFICATION_INSTITUTE","console","log","icon_name","setIcon_name","handleSubmit","register","errors","WS_Countries","setWS_Countries","WS_Institutes","setWS_Institutes","WS_Qualifications","setWS_Qualifications","WS_Counselling_Subjects","setWS_Counselling_Subjects","CT_QUALIFICATION_CODE","CT_INSTITUTE_CODE","inputList","setInputList","get","then","res","data","countries","institutes","qualifications","counselling_subjects","catch","err","addQualification","countriesList","length","map","item","i","ID","CT_COUNTRY_CODE","CT_COUNTRY_NAME","qualificationsList","CT_QUALIFICATION_NAME","instituteList","CT_INSTITUTE_NAME","onSubmit","next","e","target","name","value","Counsellor_Countries","title","code","Counsellor_Subject","Counselling_Level","Counsellor_Qualification","Counsellor_Institute","id","handleInputChange","index","list","handleRemoveClick","splice","handleAddClick","width","textAlign","float","marginLeft","padding","backgroundColor","go","x","marginRight","margin","subjects","level"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Header, Icon, Form, Image, Message,\n    Segment, Grid, Modal, Search, Button, Dimmer, Loader, Label, Container, Breadcrumb, Divider, Popup, List, Dropdown, Select\n} from 'semantic-ui-react';\nimport { useForm } from \"react-hook-form\";\nimport _AxiosInstance from '../../../Store/_AxiosInstance'\n\nconst Registration_First = ({ formData, setForm, navigation, step }) => {\n\n    const {\n        //FIRST REGISTRATION PAGE\n        COUNSELLOR_FIRST_NAME,\n        COUNSELLOR_LAST_NAME,\n        COUNSELLOR_EMAIL,\n        COUNSELLOR_PHONE_NUMBER,\n        COUNSELLOR_COUNTRY_CODE,\n        COUNSELLOR_COUNSELLING_SUBJECT_CODE,\n        COUNSELLOR_COUNSELLING_LEVEL_CODE,\n        COUNSELLOR_HOURLY_RATE,\n        COUNSELLOR_QUALIFICATION_INSTITUTE\n\n    } = formData;\n    console.log(formData)\n\n    const [icon_name, setIcon_name] = useState('circle');\n\n    const { handleSubmit, register, errors } = useForm({});\n    const [WS_Countries, setWS_Countries] = useState({});\n    const [WS_Institutes, setWS_Institutes] = useState({});\n    const [WS_Qualifications, setWS_Qualifications] = useState({});\n    const [WS_Counselling_Subjects, setWS_Counselling_Subjects] = useState({});\n    const [inputList, setInputList] = useState([{ CT_QUALIFICATION_CODE: \"\", CT_INSTITUTE_CODE: \"\" }]);\n\n\n\n    useEffect(() => {\n        _AxiosInstance.get('Selectlist')\n            .then(res => {\n                console.log(res.data)\n                const countries = res.data['COUNTRIES'];\n                const institutes = res.data['INSTITUTES'];\n                const qualifications = res.data['QUALIFICATIONS'];\n                const counselling_subjects = res.data['COUNSELLING_SUBJECTS'];\n                setWS_Countries(countries);\n                setWS_Institutes(institutes);\n                setWS_Qualifications(qualifications);\n            })\n            .catch(err => {\n\n            })\n\n        return () => {\n            console.log(\"cleaned up state...\");\n            setWS_Countries({});\n            setWS_Qualifications({});\n            setWS_Institutes({});\n            console.log(WS_Countries);\n        };\n\n    }, []);\n\n\n    const addQualification = () => {\n\n    }\n\n    let countriesList = WS_Countries.length > 0 && WS_Countries.map((item, i) => {\n        return (\n            <>\n                <option key={item.ID} value={item.CT_COUNTRY_CODE}>{item.CT_COUNTRY_NAME}</option>\n            </>\n        )\n    }, this);\n\n\n    let qualificationsList = WS_Qualifications.length > 0 && WS_Qualifications.map((item, i) => {\n        return (\n            <>\n                <option key={item.ID} value={item.CT_QUALIFICATION_CODE}>{item.CT_QUALIFICATION_NAME}</option>\n            </>\n        )\n    }, this);\n\n    let instituteList = WS_Institutes.length > 0 && WS_Institutes.map((item, i) => {\n        return (\n            <>\n                <option key={item.ID} value={item.CT_INSTITUTE_CODE}>{item.CT_INSTITUTE_NAME}</option>\n            </>\n        )\n    }, this);\n\n    const onSubmit = (data) => {\n\n        navigation.next();\n    };\n\n    useEffect(() => {\n\n        const e = {\n            target: {\n                name: \"COUNSELLOR_QUALIFICATION_INSTITUTE\",\n                value: inputList\n            }\n        };\n        setForm(e);\n\n    }, [inputList])\n\n    const Counsellor_Countries = [\n        {\n            title: \"What kind of traveler are you?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Subject = [\n        {\n            title: \"Choose subject?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counselling_Level = [\n        {\n            title: \"Choose Level?\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Qualification = [\n        {\n            title: \"Choose Qualification\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n    const Counsellor_Institute = [\n        {\n            title: \"Choose Institute\",\n            name: [\n                \"Adrenaline Addicts\", \"Culture Lovers\", \"Aquatic adventures\", \"Beach enthusiasts\"\n            ],\n            code: [0, 1, 2, 3]\n        }\n    ]\n\n\n    useEffect(() => {\n        if (step.id == 'Counsellor_details')\n            setIcon_name('circle')\n        else\n            setIcon_name('circle outline')\n\n    }, [])\n\n    useEffect(() => {\n        if (COUNSELLOR_QUALIFICATION_INSTITUTE.length > 0) {\n            console.log(\"****************\",COUNSELLOR_QUALIFICATION_INSTITUTE)\n            console.log(\"&&&&&&&&&&&&&&&&&&&&&&&\",formData.COUNSELLOR_QUALIFICATION_INSTITUTE)\n            setInputList(COUNSELLOR_QUALIFICATION_INSTITUTE)\n        }\n    }, [])\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...inputList];\n        list[index][name] = value;\n        setInputList(list);\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setInputList(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        setInputList([...inputList, { CT_QUALIFICATION_CODE: \"\", CT_INSTITUTE_CODE: \"\" }]);\n    };\n\n    console.log(formData);\n\n    return (\n        <React.Fragment>\n            <Grid>\n                <Grid.Column>\n                    <Form onSubmit={handleSubmit(onSubmit)}>\n                        <center>\n                            <Segment inverted color='teal' size=\"mini\" style={{ width: '85%', textAlign: 'center' }}>\n                                <Container>\n                                    <div style={{ float: 'left', marginLeft: '2rem' }}>\n                                        <h4>Registation for Counsellor</h4>\n                                    </div>\n                                    <div style={{ float: 'right', padding: '1rem;' }}>\n                                        <Label as='a' onClick={() => navigation.next()}>\n                                            <Icon name='hand point right outline' />\n                                  Next\n                                </Label>\n                                    </div>\n                                </Container>\n                                <br />\n                                <Container style={{ padding: '1rem 2rem', textAlign: 'left' }}>\n                                    <div style={{ backgroundColor: 'transparent' }}>\n                                        <List horizontal >\n                                            <List.Item>\n                                                <Label as='a' circular onClick={() => navigation.go(0)}>\n                                                    <Icon name={icon_name} />\n                                                Personal Details&nbsp;\n                                            </Label>\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(1)}>\n                                                    <Icon name=\"circle outline\" />\n                                                Profile Photo&nbsp;\n                                            </Label>\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(2)}>\n                                                    <Icon name=\"circle outline\" />\n                                                Description&nbsp;\n                                            </Label>\n                                                <Label as='a' className=\"activeBreadCrumb\" circular onClick={() => navigation.go(3)}>\n                                                    <Icon name=\"circle outline\" />\n                                                Video&nbsp;\n                                            </Label>\n                                            </List.Item>\n                                        </List>\n                                    </div>\n                                </Container>\n                                <div style={{ width: '100%' }}>\n                                    <center>\n                                        <Segment style={{ width: '95%' }}>\n                                            <center>\n                                                <div style={{ width: '100%', textAlign: 'left' }}>\n                                                    <Label as='a' color='blue' ribbon>\n                                                        Personal Details\n                                        </Label>\n                                                </div>\n                                                <br />\n                                                <Form.Group widths='equal'>\n\n                                                    <Form.Field className=\"CustomForm\">\n                                                        <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                            placeholder='First Name'\n                                                            type='text'\n                                                            name=\"COUNSELLOR_FIRST_NAME\"\n                                                            onChange={setForm}\n                                                            value={COUNSELLOR_FIRST_NAME}\n                                                        // ref={register({ validate: COUNSELLOR_FIRST_NAME => COUNSELLOR_FIRST_NAME && COUNSELLOR_FIRST_NAME.length > 3 })}\n                                                        />\n                                                        {errors.COUNSELLOR_FIRST_NAME && <p className=\"customError\">Username invalid</p>}\n                                                    </Form.Field>\n\n\n                                                    <Form.Field className=\"CustomForm\">\n                                                        <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                            fluid\n                                                            icon='user'\n                                                            iconPosition='left'\n                                                            placeholder='Last Name'\n                                                            type='text'\n                                                            name=\"COUNSELLOR_LAST_NAME\"\n                                                            onChange={setForm}\n                                                            value={COUNSELLOR_LAST_NAME}\n                                                        // ref={register({ validate: COUNSELLOR_LAST_NAME => COUNSELLOR_LAST_NAME && COUNSELLOR_LAST_NAME.length > 3 })}\n                                                        />\n                                                        {errors.COUNSELLOR_LAST_NAME && <p className=\"customError\">Username invalid</p>}\n                                                    </Form.Field>\n\n\n                                                </Form.Group>\n\n                                                <Form.Group widths='equal'>\n                                                    <Form.Field className=\"CustomForm\">\n                                                        <Icon name=\"mail\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                            \n                                                            iconPosition='left'\n                                                            placeholder='Email'\n                                                            type='text'\n                                                            name=\"COUNSELLOR_EMAIL\"\n                                                            onChange={setForm}\n                                                            value={COUNSELLOR_EMAIL}\n                                                        // ref={register({ validate: COUNSELLOR_EMAIL => COUNSELLOR_EMAIL && COUNSELLOR_EMAIL.length > 3 })}\n                                                        />\n                                                        {errors.COUNSELLOR_EMAIL && <p className=\"customError\">Username invalid</p>}\n                                                    </Form.Field>\n\n                                                    <Form.Field className=\"CustomForm\">\n                                                        <Icon name=\"phone\" className=\"customIconsAlign\" />\n                                                        &nbsp;&nbsp;&nbsp;\n                                                        <input\n                                                            fluid\n                                                            placeholder='Phone number'\n                                                            type='text'\n                                                            name=\"COUNSELLOR_PHONE_NUMBER\"\n                                                            onChange={setForm}\n                                                            value={COUNSELLOR_PHONE_NUMBER}\n                                                        // ref={register({ validate: COUNSELLOR_PHONE_NUMBER => COUNSELLOR_PHONE_NUMBER && COUNSELLOR_PHONE_NUMBER.length > 3 })}\n                                                        />\n                                                        {errors.COUNSELLOR_PHONE_NUMBER && <p className=\"customError\">Username invalid</p>}\n                                                    </Form.Field>\n\n                                                </Form.Group>\n\n\n                                                <Form.Group widths='equal'>\n                                                    <Form.Field className=\"CustomForm\">\n                                                        <Icon name=\"world\" className=\"customIconsAlign\" />\n                                                        &nbsp;&nbsp;&nbsp;\n                                                        <select className=\"\" name=\"COUNSELLOR_COUNTRY_CODE\" value={COUNSELLOR_COUNTRY_CODE} onChange={setForm} placeholder=\"select your country\">\n                                                            <option selected hidden>Select your country</option>\n                                                            {countriesList}\n                                                        </select>\n                                                    </Form.Field>\n\n                                                    <Form.Field>\n                                                    </Form.Field>\n\n                                                </Form.Group>\n                                                <br />\n                                                <div style={{ width: '100%', textAlign: 'left' }}>\n                                                    <Label as='a' color='blue' ribbon>\n                                                        Educational details\n                                                 </Label>\n                                                </div>\n                                                <br />\n\n                                                {inputList.map((x, i) => {\n                                                    return (\n\n                                                        <React.Fragment>\n                                                            <Form.Group widths='equal'>\n                                                            <Form.Field className=\"CustomForm\">\n                                                                <Icon name=\"graduation\" className=\"customIconsAlign\" />\n                                                                 &nbsp;&nbsp;&nbsp;\n                                                                <select\n                                                                    name=\"CT_QUALIFICATION_CODE\"\n                                                                    value={x.CT_QUALIFICATION_CODE}\n                                                                    onChange={(e) => handleInputChange(e, i)}\n                                                                    placeholder=\"select your Qualification\"\n                                                                >\n                                                                    <option selected hidden>Select Your Qualification</option>\n                                                                    {qualificationsList}\n                                                                </select>\n                                                            </Form.Field>\n                                                            <Form.Field className=\"CustomForm\">\n                                                                <Icon name=\"university\" className=\"customIconsAlign\" />\n                                                                    &nbsp;&nbsp;&nbsp;\n                                                                    <select\n                                                                    name=\"CT_INSTITUTE_CODE\"\n                                                                    value={x.CT_INSTITUTE_CODE}\n                                                                    onChange={(e) => handleInputChange(e, i)}\n                                                                    placeholder=\"select your Institute\"\n                                                                >\n                                                                    <option selected hidden>\n                                                                        Select your institute\n                                                                </option>\n                                                                    {instituteList}\n                                                                </select>\n                                                            </Form.Field>\n                                                            </Form.Group>\n                                                            <div style={{ textAlign: 'left',width:'84%'}}>\n                                                                {inputList.length !== 1 && (\n                                                                    <Label as=\"a\" onClick={() => handleRemoveClick(i)} circular style={{ marginRight: '10px' }}>\n                                                                        <Icon color=\"red\" name='remove' style={{ margin: '0px' }} />\n                                                                    </Label>\n                                                                )}\n\n                                                                {inputList.length - 1 === i && (\n                                                                    <Label as=\"a\" onClick={handleAddClick} circular style={{ marginRight: '10px' }}>\n                                                                        <Icon color=\"green\" name='plus' style={{ margin: '0px' }} />\n                                                                    </Label>\n                                                                )}\n                                                            </div>\n                                                              \n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n\n\n\n\n                                                <br />\n                                            <div style={{ width: '100%', textAlign: 'left' }}>\n                                                <Label as='a' color='blue' ribbon>\n                                                    Counselling details\n                            </Label>\n                                            </div>\n                                            <br />\n                                            <Form.Group widths='equal'>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_SUBJECT_CODE\" value={COUNSELLOR_COUNSELLING_SUBJECT_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counsellor_Subject.map((subjects) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected hidden>{subjects.title}</option>\n                                                                        {\n                                                                            subjects.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                &nbsp;&nbsp;&nbsp;\n                                    <select name=\"COUNSELLOR_COUNSELLING_LEVEL_CODE\" value={COUNSELLOR_COUNSELLING_LEVEL_CODE} onChange={setForm} placeholder=\"choose subject\">\n                                                        {\n                                                            Counselling_Level.map((level) => {\n                                                                return (\n                                                                    <React.Fragment>\n                                                                        <option disabled selected hidden>{level.title}</option>\n                                                                        {\n                                                                            level.name.map((name, code) => <option value={code}>{name}</option>)\n                                                                        }\n                                                                    </React.Fragment>\n                                                                )\n\n                                                            })\n                                                        }\n                                                    </select>\n                                                </Form.Field>\n                                                <Form.Field className=\"CustomForm\">\n                                                    <Icon name=\"user\" className=\"customIconsAlign\" />\n                                    &nbsp;&nbsp;&nbsp;\n                                    <input\n                                                        fluid\n                                                        icon='user'\n                                                        iconPosition='left'\n                                                        placeholder='Enter your details'\n                                                        type='text'\n                                                        name=\"COUNSELLOR_HOURLY_RATE\"\n                                                        onChange={setForm}\n                                                        value={COUNSELLOR_HOURLY_RATE}\n                                                        ref={register}\n                                                    />\n                                    $\n                                    {/* {errors.COUNSELLOR_HOURLY_RATE && <p className=\"customError\">Username invalid</p>} */}\n                                                </Form.Field>\n\n                                            </Form.Group>\n                                            </center>\n                                        </Segment>\n                                    </center>\n                                </div>\n                            </Segment>\n                        </center>\n                    </Form>\n\n                </Grid.Column>\n            </Grid >\n        </React.Fragment >\n    )\n\n}\n\nexport default Registration_First;"]},"metadata":{},"sourceType":"module"}