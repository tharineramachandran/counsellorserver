{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\UserDashboard\\\\layout\\\\ViewCounsellorAccepted.js\";\nimport React from 'react';\nimport { Button, Form, Header, Image, Input, Dropdown, Grid, Modal, Message, Segment, Card, Img, Icon, Table, Label, Container, List, Popup } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nvar axios = require('axios');\n\nvar ViewAccepted = /*#__PURE__*/function (_React$Component) {\n  _inherits(ViewAccepted, _React$Component);\n\n  var _super = _createSuper(ViewAccepted);\n\n  function ViewAccepted() {\n    var _this;\n\n    _classCallCheck(this, ViewAccepted);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      requests: [],\n      openModel: false,\n      element: {}\n    };\n\n    _this.handleEventClick = function (_ref) {\n      var event = _ref.event;\n      // openAppointment is a function I wrote to open a form to edit that appointment\n      console.log(event); // window.open(event._def.extendedProps.url);\n\n      console.log(event);\n\n      _this.setState({\n        openModel: true,\n        element: event._def.extendedProps.element\n      });\n    };\n\n    _this.openGoogleMeet = function (url) {\n      window.open(url);\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewAccepted, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/session/accepted/' + localStorage.userID, {\n        headers: {\n          jwtToken: localStorage.jwtToken\n        },\n        data: {\n          userID: localStorage.userID\n        }\n      }).then(function (res) {\n        console.log(\"-------------------------------------------------------------------res\");\n        var requests = res.data;\n        console.log(requests);\n        var display = [];\n        requests.forEach(function (element) {\n          var strsa = element.ct_session_start_time;\n          var st = strsa.split('T');\n          var stDF = st[1].split(':');\n          var str = st[0] + \"T\" + stDF[0] + \":\" + stDF[1] + \":00\";\n          var startdate = new Date(str);\n          var endstrsa = element.ct_session_end_time;\n          var endst = endstrsa.split('T');\n          var endstDF = endst[1].split(':');\n          var endstr = endst[0] + \"T\" + endstDF[0] + \":\" + endstDF[1] + \":00\";\n          var enddate = new Date(endstr);\n          var eventdatestart = startdate;\n          var eventdateend = enddate;\n          var datestr = element.ct_session_start_time.split(\"T\");\n          var datestrdate = datestr[0].split(\"-\");\n          var datestr3 = datestr[1].split(\":\");\n          var enddatestr = element.ct_session_end_time.split(\"T\");\n          var enddatestr3 = enddatestr[1].split(\":\");\n          var day = parseInt(datestrdate[2]).toString();\n          element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\n          element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\n          element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\n          var obj = {\n            title: 'Counselling Session',\n            start: str,\n            end: endstr,\n            extendedProps: {\n              element: element\n            }\n          };\n          display.push(obj);\n        });\n        var openModel = false;\n\n        _this2.setState({\n          requests: display,\n          openModel: openModel\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        columns: \"equal\",\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FullCalendar, {\n        nowIndicator: true,\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        initialView: \"dayGridMonth\",\n        events: this.state.requests,\n        eventClick: this.handleEventClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        onClose: function onClose() {\n          return _this3.setState({\n            openModel: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this3.setState({\n            openModel: true\n          });\n        },\n        open: this.state.openModel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, \"Session Details \"), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Counsellee Username  : \", this.state.element.TX_USER_NAME, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 95\n        }\n      }), \"Counsellee  Email : \", this.state.element.TX_USER_EMAIL, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 93\n        }\n      }), \"Session Date  : \", this.state.element.ct_session_date, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 91\n        }\n      }), \"Session Start Time  : \", this.state.element.ct_session_start_time, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 102\n        }\n      }), \"Session End Time  : \", this.state.element.ct_session_end_time, \"   \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 100\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 108\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          return window.open(_this3.state.element.ct_meeting_url);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      }, \" Google Meet Link\")), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"black\",\n        onClick: function onClick() {\n          return _this3.setState({\n            openModel: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, \"Close\")))))));\n    }\n  }]);\n\n  return ViewAccepted;\n}(React.Component);\n\nexport default ViewAccepted;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/UserDashboard/layout/ViewCounsellorAccepted.js"],"names":["React","Button","Form","Header","Image","Input","Dropdown","Grid","Modal","Message","Segment","Card","Img","Icon","Table","Label","Container","List","Popup","ToastContainer","toast","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","axios","require","ViewAccepted","state","requests","openModel","element","handleEventClick","event","console","log","setState","_def","extendedProps","openGoogleMeet","url","window","open","get","localStorage","userID","headers","jwtToken","data","then","res","display","forEach","strsa","ct_session_start_time","st","split","stDF","str","startdate","Date","endstrsa","ct_session_end_time","endst","endstDF","endstr","enddate","eventdatestart","eventdateend","datestr","datestrdate","datestr3","enddatestr","enddatestr3","day","parseInt","toString","ct_session_date","obj","title","start","end","push","catch","error","left","center","right","TX_USER_NAME","TX_USER_EMAIL","ct_meeting_url","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button, Form, Header, Image, Input,\r\n    Dropdown, Grid, Modal,\r\n    Message, Segment, Card, Img, Icon,\r\n    Table, Label, Container, List, Popup\r\n} from \"semantic-ui-react\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nconst axios = require('axios');\r\nclass ViewAccepted extends React.Component {\r\n    state = {\r\n        requests: [],\r\n        openModel: false,\r\n        element: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/session/accepted/'+localStorage.userID, {\r\n            headers: {\r\n                jwtToken: localStorage.jwtToken\r\n            },\r\n            data: {\r\n                userID: localStorage.userID\r\n\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(\"-------------------------------------------------------------------res\");\r\n                const requests = res.data;\r\n                console.log(requests);\r\n                var display = [];\r\n                requests.forEach(element => {\r\n\r\n\r\n\r\n                    let strsa = element.ct_session_start_time;\r\n                    var st = strsa.split('T');\r\n                    var stDF = st[1].split(':');\r\n                    let str = st[0] + \"T\" + stDF[0] + \":\" + stDF[1] + \":00\";\r\n\r\n                    let startdate = new Date(str);\r\n\r\n                    let endstrsa = element.ct_session_end_time;\r\n                    var endst = endstrsa.split('T');\r\n                    var endstDF = endst[1].split(':');\r\n                    let endstr = endst[0] + \"T\" + endstDF[0] + \":\" + endstDF[1] + \":00\";\r\n\r\n                    let enddate = new Date(endstr);\r\n\r\n\r\n                    var eventdatestart = startdate;\r\n\r\n                    var eventdateend = enddate;\r\n                    var datestr = element.ct_session_start_time.split(\"T\");\r\n\r\n                    var datestrdate = datestr[0].split(\"-\");\r\n                    var datestr3 = datestr[1].split(\":\");\r\n\r\n                    var enddatestr = element.ct_session_end_time.split(\"T\");\r\n\r\n                    var enddatestr3 = enddatestr[1].split(\":\");\r\n                    var day = (parseInt(datestrdate[2])).toString();\r\n\r\n                    element.ct_session_start_time = datestr3[0] + \":\" + datestr3[1];\r\n                    element.ct_session_end_time = enddatestr3[0] + \":\" + enddatestr3[1];\r\n                    element.ct_session_date = day + \"/\" + datestrdate[1] + \"/\" + datestrdate[0];\r\n                    var obj = {\r\n                        title: 'Counselling Session', start: str, end: endstr,\r\n\r\n                        extendedProps: { element: element }\r\n                    };\r\n\r\n                    display.push(obj);\r\n                });\r\n\r\n                const openModel = false;\r\n                this.setState({ requests: display, openModel: openModel });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleEventClick = ({ event }) => {\r\n        // openAppointment is a function I wrote to open a form to edit that appointment\r\n\r\n        console.log(event);\r\n        // window.open(event._def.extendedProps.url);\r\n        console.log(event);\r\n\r\n\r\n\r\n        this.setState({ openModel: true, element: event._def.extendedProps.element })\r\n\r\n\r\n    }\r\n    openGoogleMeet = (url) => {\r\n        window.open(url);\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid columns='equal' divided>\r\n                <Grid.Row textAlign='center'>\r\n                    <Grid.Column>\r\n\r\n                        <Container>\r\n\r\n\r\n\r\n                            <FullCalendar\r\n\r\n                                nowIndicator={true}\r\n                                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                                headerToolbar={{\r\n                                    left: 'prev,next today',\r\n                                    center: 'title',\r\n                                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                                }}\r\n                                initialView='dayGridMonth'\r\n                                events={this.state.requests}\r\n\r\n                                eventClick={this.handleEventClick}\r\n                            />\r\n \r\n                            <Modal\r\n                                onClose={() => this.setState({ openModel: false })}\r\n                                onOpen={() => this.setState({ openModel: true })}\r\n                                open={this.state.openModel} >\r\n                                <Modal.Header>Session Details </Modal.Header>\r\n                                <Modal.Content  >\r\n\r\n                                    Counsellee Username  : {this.state.element.TX_USER_NAME}  <br />\r\n                                    Counsellee  Email : {this.state.element.TX_USER_EMAIL}  <br />\r\n                                    Session Date  : {this.state.element.ct_session_date}  <br />\r\n                                    Session Start Time  : {this.state.element.ct_session_start_time} <br />\r\n                                    Session End Time  : {this.state.element.ct_session_end_time}   <br />  <br />\r\n                                    <Button color='teal'\r\n                                        onClick={() => window.open(this.state.element.ct_meeting_url)}\r\n                                    > Google Meet Link\r\n                                                 </Button>\r\n                                </Modal.Content>\r\n                                <Modal.Actions>\r\n                                    <Button color='black' onClick={() => this.setState({ openModel: false })}>\r\n                                        Close\r\n                                                                </Button>\r\n                                </Modal.Actions>\r\n                            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/* <h1>Accepted requests for sessions</h1>\r\n                            <Table basic='very' celled collapsing>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                    <Table.HeaderCell> Session ID </Table.HeaderCell>\r\n                                        <Table.HeaderCell> Counsellee Name </Table.HeaderCell>\r\n                                        <Table.HeaderCell> Counsellee Email </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Start Time </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Meeting URL </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Session Start Time  </Table.HeaderCell>\r\n                                        <Table.HeaderCell>Session Session End Time </Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    {this.state.requests.length > 0 ? (\r\n                                        this.state.requests.map((details, index) => (\r\n                                            \r\n  \r\n                                            <Table.Row>\r\n                                               < Table.Cell>\r\n                                                    {details.id}\r\n                                                </Table.Cell>\r\n                                                \r\n                                                <Table.Cell>\r\n                                                    {details.TX_USER_NAME}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.TX_USER_EMAIL}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                  \r\n                            <a class=\"ui teal label\"  onClick= {() => {    window.open(details.ct_meeting_url ); }}>Google Meet Link </a>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_date}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_start_time}\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    {details.ct_session_end_time}\r\n                                                </Table.Cell>\r\n                                            </Table.Row>))\r\n                                    ) :\r\n                                        (\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    No accepted requests requests found for you  \r\n                                        </Table.Cell>\r\n                                            </Table.Row>\r\n                                        )\r\n                                    }\r\n                                </Table.Body>\r\n                            </Table> */}\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewAccepted;"]},"metadata":{},"sourceType":"module"}