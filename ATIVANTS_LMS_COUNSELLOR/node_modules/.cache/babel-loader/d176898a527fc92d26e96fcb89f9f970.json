{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\githubLMS\\\\counsellorserver\\\\ATIVANTS_LMS_COUNSELLOR\\\\src\\\\SecondaryComponents\\\\Desktop\\\\UserDashboard\\\\layout\\\\UserChangeSessionModel.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Button, Form, Header, Image, Input, Dropdown, Grid, Message, Segment, Card, Img, Icon, Table, Label, Container, List, Popup } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from 'react-datepicker';\n\nvar axios = require('axios');\n\nvar daysNotAvailableList = [];\n\nvar UserChangeSession = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserChangeSession, _React$Component);\n\n  var _super = _createSuper(UserChangeSession);\n\n  function UserChangeSession(props) {\n    var _this;\n\n    _classCallCheck(this, UserChangeSession);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      request: [],\n      slots: [],\n      slotValue: '',\n      formWarning: '',\n      slotOptions: []\n    };\n\n    _this.slotChange = function (e, data) {\n      _this.setState({\n        slotValue: data.value,\n        formWarning: ''\n      });\n\n      console.log(data);\n    };\n\n    _this.submitRequest = function () {\n      if (_this.state.slotValue) {\n        var data = {\n          session: _this.state.slotValue\n        };\n        console.log(data);\n        var headers = {\n          jwtToken: localStorage.jwtToken\n        };\n        axios.post(\"http://localhost:5000/session/user/acceptChange\", data, {\n          headers: headers\n        }).then(function (res) {\n          console.log(res);\n          console.log(res.data);\n          toast.success('Request is sent to counsellor!', {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: false,\n            draggable: true,\n            progress: ''\n          });\n          var els = document.getElementsByClassName('appBanner');\n\n          for (var i = 0; i < els.length; i++) {\n            els[i].style.display = els[i].style.display == \"none\" ? \"block\" : \"none\";\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            toast.error('Unsuccessful request counsellor', {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: true,\n              closeOnClick: true,\n              pauseOnHover: false,\n              draggable: true,\n              progress: ''\n            });\n          }\n        });\n      } else {\n        _this.setState({\n          formWarning: \"Invalid form\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UserChangeSession, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var slotOptions = [];\n      var element = this.props.Request;\n\n      for (var x = 0; x < element.changeRequests.length; x++) {\n        slotOptions.push({\n          key: element.changeRequests[x].id,\n          value: element.changeRequests[x].id,\n          text: element.changeRequests[x].ct_session_start_time + \" to \" + element.changeRequests[x].ct_session_end_time + \" on \" + element.changeRequests[x].ct_session_date\n        });\n      }\n\n      this.setState({\n        slots: slotOptions,\n        slotOptions: slotOptions,\n        formWarning: '',\n        slotValue: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, \"Pick one of the following sessions for counselling change\"), this.state.slots.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Add slot timing\",\n        fluid: true,\n        selection: true,\n        value: this.state.slotValue,\n        onChange: this.slotChange,\n        options: this.state.slotOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      })) : /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }\n      }, \"no slot timing available\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, this.state.formWarning), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"appBanner\",\n        class: \"ui button\",\n        onClick: this.submitRequest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return UserChangeSession;\n}(React.Component);\n\nexport default UserChangeSession;","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/githubLMS/counsellorserver/ATIVANTS_LMS_COUNSELLOR/src/SecondaryComponents/Desktop/UserDashboard/layout/UserChangeSessionModel.js"],"names":["React","useState","useContext","useEffect","Button","Form","Header","Image","Input","Dropdown","Grid","Message","Segment","Card","Img","Icon","Table","Label","Container","List","Popup","ToastContainer","toast","DatePicker","axios","require","daysNotAvailableList","UserChangeSession","props","state","request","slots","slotValue","formWarning","slotOptions","slotChange","e","data","setState","value","console","log","submitRequest","session","headers","jwtToken","localStorage","post","then","res","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","els","document","getElementsByClassName","i","length","style","display","catch","error","response","element","Request","x","changeRequests","push","key","id","text","ct_session_start_time","ct_session_end_time","ct_session_date","color","Component"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Header,\r\n  Image,\r\n  Input, Dropdown, Grid,\r\n  Message,\r\n  Segment, Card, Img, Icon,\r\n  Table, Label, Container, List, Popup\r\n} from \"semantic-ui-react\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from 'react-datepicker';\r\nconst axios = require('axios');\r\n\r\nvar daysNotAvailableList = [];\r\nclass UserChangeSession extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n  }\r\n\r\n  state = {\r\n    request: [],\r\n    slots: [],\r\n    slotValue: '',\r\n    formWarning: '',\r\n    slotOptions: []\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const slotOptions = [];\r\n    var element = this.props.Request;\r\n    for (let x = 0; x < element.changeRequests.length; x++) {\r\n      slotOptions.push({ key: element.changeRequests[x].id, value: element.changeRequests[x].id, text: element.changeRequests[x].ct_session_start_time + \" to \" + element.changeRequests[x].ct_session_end_time + \" on \" + element.changeRequests[x].ct_session_date });\r\n    }\r\n    this.setState({ slots: slotOptions, slotOptions: slotOptions, formWarning: '', slotValue: '' });\r\n  };\r\n  slotChange = (e, data) => {\r\n    this.setState({ slotValue: data.value, formWarning: '' });\r\n\r\n    console.log(data);\r\n  };\r\n  submitRequest = () => {\r\n\r\n    if (this.state.slotValue) {\r\n      const data = {\r\n        session: this.state.slotValue\r\n      };\r\n      console.log(data)\r\n      const headers = {\r\n        jwtToken: localStorage.jwtToken\r\n      }\r\n\r\n      axios.post(`http://localhost:5000/session/user/acceptChange`, data, {\r\n        headers: headers\r\n      })\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          toast.success('Request is sent to counsellor!', {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: true,\r\n            progress: '',\r\n          });\r\n          var els = document.getElementsByClassName('appBanner');\r\n          for (var i = 0; i < els.length; i++) {\r\n            els[i].style.display = els[i].style.display == \"none\" ? \"block\" : \"none\";\r\n          }\r\n\r\n        }).catch((error) => {\r\n          if (error.response) {\r\n\r\n            toast.error('Unsuccessful request counsellor', {\r\n              position: \"top-right\",\r\n              autoClose: 3000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: true,\r\n              progress: '',\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n\r\n      this.setState({ formWarning: \"Invalid form\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n        <h3>Pick one of the following sessions for counselling change</h3>\r\n        {this.state.slots.length > 0 ? (<div>\r\n          < br />\r\n          <Dropdown placeholder='Add slot timing'\r\n            fluid\r\n            selection value={this.state.slotValue} onChange={this.slotChange} options={this.state.slotOptions} />\r\n        </div>) :\r\n          (<strong>\r\n            no slot timing available\r\n          </strong>)\r\n        }\r\n        < br />\r\n        <p style={{ color: 'red' }}>{this.state.formWarning}</p>\r\n        < br />\r\n        <button className=\"appBanner\" class=\"ui button\" onClick={this.submitRequest}>Submit</button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserChangeSession;\r\n\r\n"]},"metadata":{},"sourceType":"module"}